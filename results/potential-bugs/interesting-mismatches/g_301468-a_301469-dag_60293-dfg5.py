# ======== Program ========
from pyflink.table import *
from pyflink.table.expressions import *
from pyflink.table.udf import udf
from pyflink.table.types import DataTypes

from pyflink.table.udf import AggregateFunction, udaf
from pyflink.table import DataTypes
import pandas as pd

class MyObject:
    def __init__(self, name, value):
        self.name = name
        self.value = value

# UDF that returns the custom object
@udf(result_type=DataTypes.ROW([
    DataTypes.FIELD("name", DataTypes.STRING()),
    DataTypes.FIELD("value", DataTypes.INT())
]))
def preloaded_udf_complex(*input_val):
    obj = MyObject("test", hash(input_val[0]))
    return (obj.name, obj.value)  # Return as tuple

@udf(result_type=DataTypes.BOOLEAN())
def preloaded_udf_boolean(input_val):
    return True


def preloaded_aggregation(values: pd.Series) -> float:
    return values.max()


try:
    table_env.drop_temporary_function("preloaded_udf_agg")
except:
    pass

preloaded_udf_agg = udaf(preloaded_aggregation, result_type=DataTypes.BIGINT(), func_type="pandas")

table_env.create_temporary_function("preloaded_udf_agg", preloaded_udf_agg)

autonode_10 = table_env.from_path("promotion").select(*[col(column_name).alias(f"{column_name}_node_10") for column_name in table_env.from_path("promotion").get_schema().get_field_names()])
autonode_9 = table_env.from_path("web_sales").select(*[col(column_name).alias(f"{column_name}_node_9") for column_name in table_env.from_path("web_sales").get_schema().get_field_names()])
autonode_8 = table_env.from_path("date_dim").select(*[col(column_name).alias(f"{column_name}_node_8") for column_name in table_env.from_path("date_dim").get_schema().get_field_names()])
autonode_7 = table_env.from_path("customer_demographics").select(*[col(column_name).alias(f"{column_name}_node_7") for column_name in table_env.from_path("customer_demographics").get_schema().get_field_names()])
autonode_11 = table_env.from_path("store").select(*[col(column_name).alias(f"{column_name}_node_11") for column_name in table_env.from_path("store").get_schema().get_field_names()])
autonode_5 = autonode_9.join(autonode_10, col('ws_ext_list_price_node_9') == col('p_cost_node_10'))
autonode_4 = autonode_7.join(autonode_8, col('cd_demo_sk_node_7') == col('d_moy_node_8'))
autonode_6 = autonode_11.add_columns(lit("hello"))
autonode_2 = autonode_4.order_by(col('d_fy_quarter_seq_node_8'))
autonode_3 = autonode_5.join(autonode_6, col('p_promo_id_node_10') == col('s_zip_node_11'))
autonode_1 = autonode_2.join(autonode_3, col('cd_credit_rating_node_7') == col('s_street_number_node_11'))
sink = autonode_1.group_by(col('s_geography_class_node_11')).select(col('d_moy_node_8').min.alias('d_moy_node_8'))
print(sink.explain())

# ======== Details ========
"""
{
  "is_same": false,
  "result_name": "MismatchException",
  "result_details": {
    "opt": {
      "success": true,
      "error_name": "",
      "error_message": "",
      "stdout": "== Abstract Syntax Tree ==
LogicalProject(d_moy_node_8=[$1])
+- LogicalAggregate(group=[{101}], EXPR$0=[MIN($17)])
   +- LogicalJoin(condition=[=($5, $108)], joinType=[inner])
      :- LogicalSort(sort0=[$21], dir0=[ASC])
      :  +- LogicalJoin(condition=[=($0, $17)], joinType=[inner])
      :     :- LogicalProject(cd_demo_sk_node_7=[$0], cd_gender_node_7=[$1], cd_marital_status_node_7=[$2], cd_education_status_node_7=[$3], cd_purchase_estimate_node_7=[$4], cd_credit_rating_node_7=[$5], cd_dep_count_node_7=[$6], cd_dep_employed_count_node_7=[$7], cd_dep_college_count_node_7=[$8])
      :     :  +- LogicalTableScan(table=[[default_catalog, default_database, customer_demographics]])
      :     +- LogicalProject(d_date_sk_node_8=[$0], d_date_id_node_8=[$1], d_date_node_8=[$2], d_month_seq_node_8=[$3], d_week_seq_node_8=[$4], d_quarter_seq_node_8=[$5], d_year_node_8=[$6], d_dow_node_8=[$7], d_moy_node_8=[$8], d_dom_node_8=[$9], d_qoy_node_8=[$10], d_fy_year_node_8=[$11], d_fy_quarter_seq_node_8=[$12], d_fy_week_seq_node_8=[$13], d_day_name_node_8=[$14], d_quarter_name_node_8=[$15], d_holiday_node_8=[$16], d_weekend_node_8=[$17], d_following_holiday_node_8=[$18], d_first_dom_node_8=[$19], d_last_dom_node_8=[$20], d_same_day_ly_node_8=[$21], d_same_day_lq_node_8=[$22], d_current_day_node_8=[$23], d_current_week_node_8=[$24], d_current_month_node_8=[$25], d_current_quarter_node_8=[$26], d_current_year_node_8=[$27])
      :        +- LogicalTableScan(table=[[default_catalog, default_database, date_dim]])
      +- LogicalJoin(condition=[=($35, $78)], joinType=[inner])
         :- LogicalJoin(condition=[=($25, $39)], joinType=[inner])
         :  :- LogicalProject(ws_sold_date_sk_node_9=[$0], ws_sold_time_sk_node_9=[$1], ws_ship_date_sk_node_9=[$2], ws_item_sk_node_9=[$3], ws_bill_customer_sk_node_9=[$4], ws_bill_cdemo_sk_node_9=[$5], ws_bill_hdemo_sk_node_9=[$6], ws_bill_addr_sk_node_9=[$7], ws_ship_customer_sk_node_9=[$8], ws_ship_cdemo_sk_node_9=[$9], ws_ship_hdemo_sk_node_9=[$10], ws_ship_addr_sk_node_9=[$11], ws_web_page_sk_node_9=[$12], ws_web_site_sk_node_9=[$13], ws_ship_mode_sk_node_9=[$14], ws_warehouse_sk_node_9=[$15], ws_promo_sk_node_9=[$16], ws_order_number_node_9=[$17], ws_quantity_node_9=[$18], ws_wholesale_cost_node_9=[$19], ws_list_price_node_9=[$20], ws_sales_price_node_9=[$21], ws_ext_discount_amt_node_9=[$22], ws_ext_sales_price_node_9=[$23], ws_ext_wholesale_cost_node_9=[$24], ws_ext_list_price_node_9=[$25], ws_ext_tax_node_9=[$26], ws_coupon_amt_node_9=[$27], ws_ext_ship_cost_node_9=[$28], ws_net_paid_node_9=[$29], ws_net_paid_inc_tax_node_9=[$30], ws_net_paid_inc_ship_node_9=[$31], ws_net_paid_inc_ship_tax_node_9=[$32], ws_net_profit_node_9=[$33])
         :  :  +- LogicalTableScan(table=[[default_catalog, default_database, web_sales]])
         :  +- LogicalProject(p_promo_sk_node_10=[$0], p_promo_id_node_10=[$1], p_start_date_sk_node_10=[$2], p_end_date_sk_node_10=[$3], p_item_sk_node_10=[$4], p_cost_node_10=[$5], p_response_target_node_10=[$6], p_promo_name_node_10=[$7], p_channel_dmail_node_10=[$8], p_channel_email_node_10=[$9], p_channel_catalog_node_10=[$10], p_channel_tv_node_10=[$11], p_channel_radio_node_10=[$12], p_channel_press_node_10=[$13], p_channel_event_node_10=[$14], p_channel_demo_node_10=[$15], p_channel_details_node_10=[$16], p_purpose_node_10=[$17], p_discount_active_node_10=[$18])
         :     +- LogicalTableScan(table=[[default_catalog, default_database, promotion]])
         +- LogicalProject(s_store_sk_node_11=[$0], s_store_id_node_11=[$1], s_rec_start_date_node_11=[$2], s_rec_end_date_node_11=[$3], s_closed_date_sk_node_11=[$4], s_store_name_node_11=[$5], s_number_employees_node_11=[$6], s_floor_space_node_11=[$7], s_hours_node_11=[$8], s_manager_node_11=[$9], s_market_id_node_11=[$10], s_geography_class_node_11=[$11], s_market_desc_node_11=[$12], s_market_manager_node_11=[$13], s_division_id_node_11=[$14], s_division_name_node_11=[$15], s_company_id_node_11=[$16], s_company_name_node_11=[$17], s_street_number_node_11=[$18], s_street_name_node_11=[$19], s_street_type_node_11=[$20], s_suite_number_node_11=[$21], s_city_node_11=[$22], s_county_node_11=[$23], s_state_node_11=[$24], s_zip_node_11=[$25], s_country_node_11=[$26], s_gmt_offset_node_11=[$27], s_tax_precentage_node_11=[$28], _c29=[_UTF-16LE'hello'])
            +- LogicalTableScan(table=[[default_catalog, default_database, store]])

== Optimized Physical Plan ==
Calc(select=[EXPR$0 AS d_moy_node_8])
+- HashAggregate(isMerge=[false], groupBy=[s_geography_class_node_11], select=[s_geography_class_node_11, MIN(d_moy) AS EXPR$0])
   +- Exchange(distribution=[hash[s_geography_class_node_11]])
      +- NestedLoopJoin(joinType=[InnerJoin], where=[=(cd_credit_rating, s_street_number_node_11)], select=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating, cd_dep_count, cd_dep_employed_count, cd_dep_college_count, d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year, ws_sold_date_sk_node_9, ws_sold_time_sk_node_9, ws_ship_date_sk_node_9, ws_item_sk_node_9, ws_bill_customer_sk_node_9, ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk_node_9, ws_bill_addr_sk_node_9, ws_ship_customer_sk_node_9, ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk_node_9, ws_ship_addr_sk_node_9, ws_web_page_sk_node_9, ws_web_site_sk_node_9, ws_ship_mode_sk_node_9, ws_warehouse_sk_node_9, ws_promo_sk_node_9, ws_order_number_node_9, ws_quantity_node_9, ws_wholesale_cost_node_9, ws_list_price_node_9, ws_sales_price_node_9, ws_ext_discount_amt_node_9, ws_ext_sales_price_node_9, ws_ext_wholesale_cost_node_9, ws_ext_list_price_node_9, ws_ext_tax_node_9, ws_coupon_amt_node_9, ws_ext_ship_cost_node_9, ws_net_paid_node_9, ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax_node_9, ws_net_profit_node_9, p_promo_sk_node_10, p_promo_id_node_10, p_start_date_sk_node_10, p_end_date_sk_node_10, p_item_sk_node_10, p_cost_node_10, p_response_target_node_10, p_promo_name_node_10, p_channel_dmail_node_10, p_channel_email_node_10, p_channel_catalog_node_10, p_channel_tv_node_10, p_channel_radio_node_10, p_channel_press_node_10, p_channel_event_node_10, p_channel_demo_node_10, p_channel_details_node_10, p_purpose_node_10, p_discount_active_node_10, s_store_sk_node_11, s_store_id_node_11, s_rec_start_date_node_11, s_rec_end_date_node_11, s_closed_date_sk_node_11, s_store_name_node_11, s_number_employees_node_11, s_floor_space_node_11, s_hours_node_11, s_manager_node_11, s_market_id_node_11, s_geography_class_node_11, s_market_desc_node_11, s_market_manager_node_11, s_division_id_node_11, s_division_name_node_11, s_company_id_node_11, s_company_name_node_11, s_street_number_node_11, s_street_name_node_11, s_street_type_node_11, s_suite_number_node_11, s_city_node_11, s_county_node_11, s_state_node_11, s_zip_node_11, s_country_node_11, s_gmt_offset_node_11, s_tax_precentage_node_11, _c29], build=[right])
         :- Sort(orderBy=[d_fy_quarter_seq ASC])
         :  +- Exchange(distribution=[single])
         :     +- HashJoin(joinType=[InnerJoin], where=[=(cd_demo_sk, d_moy)], select=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating, cd_dep_count, cd_dep_employed_count, cd_dep_college_count, d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year], build=[right])
         :        :- Exchange(distribution=[hash[cd_demo_sk]])
         :        :  +- TableSourceScan(table=[[default_catalog, default_database, customer_demographics]], fields=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating, cd_dep_count, cd_dep_employed_count, cd_dep_college_count])
         :        +- Exchange(distribution=[hash[d_moy]])
         :           +- TableSourceScan(table=[[default_catalog, default_database, date_dim]], fields=[d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year])
         +- Exchange(distribution=[broadcast])
            +- HashJoin(joinType=[InnerJoin], where=[=(p_promo_id_node_10, s_zip_node_11)], select=[ws_sold_date_sk_node_9, ws_sold_time_sk_node_9, ws_ship_date_sk_node_9, ws_item_sk_node_9, ws_bill_customer_sk_node_9, ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk_node_9, ws_bill_addr_sk_node_9, ws_ship_customer_sk_node_9, ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk_node_9, ws_ship_addr_sk_node_9, ws_web_page_sk_node_9, ws_web_site_sk_node_9, ws_ship_mode_sk_node_9, ws_warehouse_sk_node_9, ws_promo_sk_node_9, ws_order_number_node_9, ws_quantity_node_9, ws_wholesale_cost_node_9, ws_list_price_node_9, ws_sales_price_node_9, ws_ext_discount_amt_node_9, ws_ext_sales_price_node_9, ws_ext_wholesale_cost_node_9, ws_ext_list_price_node_9, ws_ext_tax_node_9, ws_coupon_amt_node_9, ws_ext_ship_cost_node_9, ws_net_paid_node_9, ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax_node_9, ws_net_profit_node_9, p_promo_sk_node_10, p_promo_id_node_10, p_start_date_sk_node_10, p_end_date_sk_node_10, p_item_sk_node_10, p_cost_node_10, p_response_target_node_10, p_promo_name_node_10, p_channel_dmail_node_10, p_channel_email_node_10, p_channel_catalog_node_10, p_channel_tv_node_10, p_channel_radio_node_10, p_channel_press_node_10, p_channel_event_node_10, p_channel_demo_node_10, p_channel_details_node_10, p_purpose_node_10, p_discount_active_node_10, s_store_sk_node_11, s_store_id_node_11, s_rec_start_date_node_11, s_rec_end_date_node_11, s_closed_date_sk_node_11, s_store_name_node_11, s_number_employees_node_11, s_floor_space_node_11, s_hours_node_11, s_manager_node_11, s_market_id_node_11, s_geography_class_node_11, s_market_desc_node_11, s_market_manager_node_11, s_division_id_node_11, s_division_name_node_11, s_company_id_node_11, s_company_name_node_11, s_street_number_node_11, s_street_name_node_11, s_street_type_node_11, s_suite_number_node_11, s_city_node_11, s_county_node_11, s_state_node_11, s_zip_node_11, s_country_node_11, s_gmt_offset_node_11, s_tax_precentage_node_11, _c29], isBroadcast=[true], build=[right])
               :- Calc(select=[ws_sold_date_sk_node_9, ws_sold_time_sk_node_9, ws_ship_date_sk_node_9, ws_item_sk_node_9, ws_bill_customer_sk_node_9, ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk_node_9, ws_bill_addr_sk_node_9, ws_ship_customer_sk_node_9, ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk_node_9, ws_ship_addr_sk_node_9, ws_web_page_sk_node_9, ws_web_site_sk_node_9, ws_ship_mode_sk_node_9, ws_warehouse_sk_node_9, ws_promo_sk_node_9, ws_order_number_node_9, ws_quantity_node_9, ws_wholesale_cost_node_9, ws_list_price_node_9, ws_sales_price_node_9, ws_ext_discount_amt_node_9, ws_ext_sales_price_node_9, ws_ext_wholesale_cost_node_9, ws_ext_list_price_node_9, ws_ext_tax_node_9, ws_coupon_amt_node_9, ws_ext_ship_cost_node_9, ws_net_paid_node_9, ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax_node_9, ws_net_profit_node_9, p_promo_sk AS p_promo_sk_node_10, p_promo_id AS p_promo_id_node_10, p_start_date_sk AS p_start_date_sk_node_10, p_end_date_sk AS p_end_date_sk_node_10, p_item_sk AS p_item_sk_node_10, p_cost AS p_cost_node_10, p_response_target AS p_response_target_node_10, p_promo_name AS p_promo_name_node_10, p_channel_dmail AS p_channel_dmail_node_10, p_channel_email AS p_channel_email_node_10, p_channel_catalog AS p_channel_catalog_node_10, p_channel_tv AS p_channel_tv_node_10, p_channel_radio AS p_channel_radio_node_10, p_channel_press AS p_channel_press_node_10, p_channel_event AS p_channel_event_node_10, p_channel_demo AS p_channel_demo_node_10, p_channel_details AS p_channel_details_node_10, p_purpose AS p_purpose_node_10, p_discount_active AS p_discount_active_node_10])
               :  +- HashJoin(joinType=[InnerJoin], where=[=(ws_ext_list_price_node_90, p_cost)], select=[ws_sold_date_sk_node_9, ws_sold_time_sk_node_9, ws_ship_date_sk_node_9, ws_item_sk_node_9, ws_bill_customer_sk_node_9, ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk_node_9, ws_bill_addr_sk_node_9, ws_ship_customer_sk_node_9, ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk_node_9, ws_ship_addr_sk_node_9, ws_web_page_sk_node_9, ws_web_site_sk_node_9, ws_ship_mode_sk_node_9, ws_warehouse_sk_node_9, ws_promo_sk_node_9, ws_order_number_node_9, ws_quantity_node_9, ws_wholesale_cost_node_9, ws_list_price_node_9, ws_sales_price_node_9, ws_ext_discount_amt_node_9, ws_ext_sales_price_node_9, ws_ext_wholesale_cost_node_9, ws_ext_list_price_node_9, ws_ext_tax_node_9, ws_coupon_amt_node_9, ws_ext_ship_cost_node_9, ws_net_paid_node_9, ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax_node_9, ws_net_profit_node_9, ws_ext_list_price_node_90, p_promo_sk, p_promo_id, p_start_date_sk, p_end_date_sk, p_item_sk, p_cost, p_response_target, p_promo_name, p_channel_dmail, p_channel_email, p_channel_catalog, p_channel_tv, p_channel_radio, p_channel_press, p_channel_event, p_channel_demo, p_channel_details, p_purpose, p_discount_active], isBroadcast=[true], build=[right])
               :     :- Calc(select=[ws_sold_date_sk AS ws_sold_date_sk_node_9, ws_sold_time_sk AS ws_sold_time_sk_node_9, ws_ship_date_sk AS ws_ship_date_sk_node_9, ws_item_sk AS ws_item_sk_node_9, ws_bill_customer_sk AS ws_bill_customer_sk_node_9, ws_bill_cdemo_sk AS ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk AS ws_bill_hdemo_sk_node_9, ws_bill_addr_sk AS ws_bill_addr_sk_node_9, ws_ship_customer_sk AS ws_ship_customer_sk_node_9, ws_ship_cdemo_sk AS ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk AS ws_ship_hdemo_sk_node_9, ws_ship_addr_sk AS ws_ship_addr_sk_node_9, ws_web_page_sk AS ws_web_page_sk_node_9, ws_web_site_sk AS ws_web_site_sk_node_9, ws_ship_mode_sk AS ws_ship_mode_sk_node_9, ws_warehouse_sk AS ws_warehouse_sk_node_9, ws_promo_sk AS ws_promo_sk_node_9, ws_order_number AS ws_order_number_node_9, ws_quantity AS ws_quantity_node_9, ws_wholesale_cost AS ws_wholesale_cost_node_9, ws_list_price AS ws_list_price_node_9, ws_sales_price AS ws_sales_price_node_9, ws_ext_discount_amt AS ws_ext_discount_amt_node_9, ws_ext_sales_price AS ws_ext_sales_price_node_9, ws_ext_wholesale_cost AS ws_ext_wholesale_cost_node_9, ws_ext_list_price AS ws_ext_list_price_node_9, ws_ext_tax AS ws_ext_tax_node_9, ws_coupon_amt AS ws_coupon_amt_node_9, ws_ext_ship_cost AS ws_ext_ship_cost_node_9, ws_net_paid AS ws_net_paid_node_9, ws_net_paid_inc_tax AS ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship AS ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax AS ws_net_paid_inc_ship_tax_node_9, ws_net_profit AS ws_net_profit_node_9, CAST(ws_ext_list_price AS DECIMAL(15, 2)) AS ws_ext_list_price_node_90])
               :     :  +- TableSourceScan(table=[[default_catalog, default_database, web_sales]], fields=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit])
               :     +- Exchange(distribution=[broadcast])
               :        +- TableSourceScan(table=[[default_catalog, default_database, promotion]], fields=[p_promo_sk, p_promo_id, p_start_date_sk, p_end_date_sk, p_item_sk, p_cost, p_response_target, p_promo_name, p_channel_dmail, p_channel_email, p_channel_catalog, p_channel_tv, p_channel_radio, p_channel_press, p_channel_event, p_channel_demo, p_channel_details, p_purpose, p_discount_active])
               +- Exchange(distribution=[broadcast])
                  +- Calc(select=[s_store_sk AS s_store_sk_node_11, s_store_id AS s_store_id_node_11, s_rec_start_date AS s_rec_start_date_node_11, s_rec_end_date AS s_rec_end_date_node_11, s_closed_date_sk AS s_closed_date_sk_node_11, s_store_name AS s_store_name_node_11, s_number_employees AS s_number_employees_node_11, s_floor_space AS s_floor_space_node_11, s_hours AS s_hours_node_11, s_manager AS s_manager_node_11, s_market_id AS s_market_id_node_11, s_geography_class AS s_geography_class_node_11, s_market_desc AS s_market_desc_node_11, s_market_manager AS s_market_manager_node_11, s_division_id AS s_division_id_node_11, s_division_name AS s_division_name_node_11, s_company_id AS s_company_id_node_11, s_company_name AS s_company_name_node_11, s_street_number AS s_street_number_node_11, s_street_name AS s_street_name_node_11, s_street_type AS s_street_type_node_11, s_suite_number AS s_suite_number_node_11, s_city AS s_city_node_11, s_county AS s_county_node_11, s_state AS s_state_node_11, s_zip AS s_zip_node_11, s_country AS s_country_node_11, s_gmt_offset AS s_gmt_offset_node_11, s_tax_precentage AS s_tax_precentage_node_11, 'hello' AS _c29])
                     +- TableSourceScan(table=[[default_catalog, default_database, store]], fields=[s_store_sk, s_store_id, s_rec_start_date, s_rec_end_date, s_closed_date_sk, s_store_name, s_number_employees, s_floor_space, s_hours, s_manager, s_market_id, s_geography_class, s_market_desc, s_market_manager, s_division_id, s_division_name, s_company_id, s_company_name, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, s_country, s_gmt_offset, s_tax_precentage])

== Optimized Execution Plan ==
Calc(select=[EXPR$0 AS d_moy_node_8])
+- HashAggregate(isMerge=[false], groupBy=[s_geography_class_node_11], select=[s_geography_class_node_11, MIN(d_moy) AS EXPR$0])
   +- Exchange(distribution=[hash[s_geography_class_node_11]])
      +- NestedLoopJoin(joinType=[InnerJoin], where=[(cd_credit_rating = s_street_number_node_11)], select=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating, cd_dep_count, cd_dep_employed_count, cd_dep_college_count, d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year, ws_sold_date_sk_node_9, ws_sold_time_sk_node_9, ws_ship_date_sk_node_9, ws_item_sk_node_9, ws_bill_customer_sk_node_9, ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk_node_9, ws_bill_addr_sk_node_9, ws_ship_customer_sk_node_9, ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk_node_9, ws_ship_addr_sk_node_9, ws_web_page_sk_node_9, ws_web_site_sk_node_9, ws_ship_mode_sk_node_9, ws_warehouse_sk_node_9, ws_promo_sk_node_9, ws_order_number_node_9, ws_quantity_node_9, ws_wholesale_cost_node_9, ws_list_price_node_9, ws_sales_price_node_9, ws_ext_discount_amt_node_9, ws_ext_sales_price_node_9, ws_ext_wholesale_cost_node_9, ws_ext_list_price_node_9, ws_ext_tax_node_9, ws_coupon_amt_node_9, ws_ext_ship_cost_node_9, ws_net_paid_node_9, ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax_node_9, ws_net_profit_node_9, p_promo_sk_node_10, p_promo_id_node_10, p_start_date_sk_node_10, p_end_date_sk_node_10, p_item_sk_node_10, p_cost_node_10, p_response_target_node_10, p_promo_name_node_10, p_channel_dmail_node_10, p_channel_email_node_10, p_channel_catalog_node_10, p_channel_tv_node_10, p_channel_radio_node_10, p_channel_press_node_10, p_channel_event_node_10, p_channel_demo_node_10, p_channel_details_node_10, p_purpose_node_10, p_discount_active_node_10, s_store_sk_node_11, s_store_id_node_11, s_rec_start_date_node_11, s_rec_end_date_node_11, s_closed_date_sk_node_11, s_store_name_node_11, s_number_employees_node_11, s_floor_space_node_11, s_hours_node_11, s_manager_node_11, s_market_id_node_11, s_geography_class_node_11, s_market_desc_node_11, s_market_manager_node_11, s_division_id_node_11, s_division_name_node_11, s_company_id_node_11, s_company_name_node_11, s_street_number_node_11, s_street_name_node_11, s_street_type_node_11, s_suite_number_node_11, s_city_node_11, s_county_node_11, s_state_node_11, s_zip_node_11, s_country_node_11, s_gmt_offset_node_11, s_tax_precentage_node_11, _c29], build=[right])
         :- Sort(orderBy=[d_fy_quarter_seq ASC])
         :  +- Exchange(distribution=[single])
         :     +- AdaptiveJoin(originalJoin=[ShuffleHashJoin], joinType=[InnerJoin], where=[(cd_demo_sk = d_moy)], select=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating, cd_dep_count, cd_dep_employed_count, cd_dep_college_count, d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year], build=[right])
         :        :- Exchange(distribution=[hash[cd_demo_sk]])
         :        :  +- TableSourceScan(table=[[default_catalog, default_database, customer_demographics]], fields=[cd_demo_sk, cd_gender, cd_marital_status, cd_education_status, cd_purchase_estimate, cd_credit_rating, cd_dep_count, cd_dep_employed_count, cd_dep_college_count])
         :        +- Exchange(distribution=[hash[d_moy]])
         :           +- TableSourceScan(table=[[default_catalog, default_database, date_dim]], fields=[d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year])
         +- Exchange(distribution=[broadcast])
            +- MultipleInput(readOrder=[0,0,1], members=[\
HashJoin(joinType=[InnerJoin], where=[(p_promo_id_node_10 = s_zip_node_11)], select=[ws_sold_date_sk_node_9, ws_sold_time_sk_node_9, ws_ship_date_sk_node_9, ws_item_sk_node_9, ws_bill_customer_sk_node_9, ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk_node_9, ws_bill_addr_sk_node_9, ws_ship_customer_sk_node_9, ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk_node_9, ws_ship_addr_sk_node_9, ws_web_page_sk_node_9, ws_web_site_sk_node_9, ws_ship_mode_sk_node_9, ws_warehouse_sk_node_9, ws_promo_sk_node_9, ws_order_number_node_9, ws_quantity_node_9, ws_wholesale_cost_node_9, ws_list_price_node_9, ws_sales_price_node_9, ws_ext_discount_amt_node_9, ws_ext_sales_price_node_9, ws_ext_wholesale_cost_node_9, ws_ext_list_price_node_9, ws_ext_tax_node_9, ws_coupon_amt_node_9, ws_ext_ship_cost_node_9, ws_net_paid_node_9, ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax_node_9, ws_net_profit_node_9, p_promo_sk_node_10, p_promo_id_node_10, p_start_date_sk_node_10, p_end_date_sk_node_10, p_item_sk_node_10, p_cost_node_10, p_response_target_node_10, p_promo_name_node_10, p_channel_dmail_node_10, p_channel_email_node_10, p_channel_catalog_node_10, p_channel_tv_node_10, p_channel_radio_node_10, p_channel_press_node_10, p_channel_event_node_10, p_channel_demo_node_10, p_channel_details_node_10, p_purpose_node_10, p_discount_active_node_10, s_store_sk_node_11, s_store_id_node_11, s_rec_start_date_node_11, s_rec_end_date_node_11, s_closed_date_sk_node_11, s_store_name_node_11, s_number_employees_node_11, s_floor_space_node_11, s_hours_node_11, s_manager_node_11, s_market_id_node_11, s_geography_class_node_11, s_market_desc_node_11, s_market_manager_node_11, s_division_id_node_11, s_division_name_node_11, s_company_id_node_11, s_company_name_node_11, s_street_number_node_11, s_street_name_node_11, s_street_type_node_11, s_suite_number_node_11, s_city_node_11, s_county_node_11, s_state_node_11, s_zip_node_11, s_country_node_11, s_gmt_offset_node_11, s_tax_precentage_node_11, _c29], isBroadcast=[true], build=[right])\
:- Calc(select=[ws_sold_date_sk_node_9, ws_sold_time_sk_node_9, ws_ship_date_sk_node_9, ws_item_sk_node_9, ws_bill_customer_sk_node_9, ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk_node_9, ws_bill_addr_sk_node_9, ws_ship_customer_sk_node_9, ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk_node_9, ws_ship_addr_sk_node_9, ws_web_page_sk_node_9, ws_web_site_sk_node_9, ws_ship_mode_sk_node_9, ws_warehouse_sk_node_9, ws_promo_sk_node_9, ws_order_number_node_9, ws_quantity_node_9, ws_wholesale_cost_node_9, ws_list_price_node_9, ws_sales_price_node_9, ws_ext_discount_amt_node_9, ws_ext_sales_price_node_9, ws_ext_wholesale_cost_node_9, ws_ext_list_price_node_9, ws_ext_tax_node_9, ws_coupon_amt_node_9, ws_ext_ship_cost_node_9, ws_net_paid_node_9, ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax_node_9, ws_net_profit_node_9, p_promo_sk AS p_promo_sk_node_10, p_promo_id AS p_promo_id_node_10, p_start_date_sk AS p_start_date_sk_node_10, p_end_date_sk AS p_end_date_sk_node_10, p_item_sk AS p_item_sk_node_10, p_cost AS p_cost_node_10, p_response_target AS p_response_target_node_10, p_promo_name AS p_promo_name_node_10, p_channel_dmail AS p_channel_dmail_node_10, p_channel_email AS p_channel_email_node_10, p_channel_catalog AS p_channel_catalog_node_10, p_channel_tv AS p_channel_tv_node_10, p_channel_radio AS p_channel_radio_node_10, p_channel_press AS p_channel_press_node_10, p_channel_event AS p_channel_event_node_10, p_channel_demo AS p_channel_demo_node_10, p_channel_details AS p_channel_details_node_10, p_purpose AS p_purpose_node_10, p_discount_active AS p_discount_active_node_10])\
:  +- HashJoin(joinType=[InnerJoin], where=[(ws_ext_list_price_node_90 = p_cost)], select=[ws_sold_date_sk_node_9, ws_sold_time_sk_node_9, ws_ship_date_sk_node_9, ws_item_sk_node_9, ws_bill_customer_sk_node_9, ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk_node_9, ws_bill_addr_sk_node_9, ws_ship_customer_sk_node_9, ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk_node_9, ws_ship_addr_sk_node_9, ws_web_page_sk_node_9, ws_web_site_sk_node_9, ws_ship_mode_sk_node_9, ws_warehouse_sk_node_9, ws_promo_sk_node_9, ws_order_number_node_9, ws_quantity_node_9, ws_wholesale_cost_node_9, ws_list_price_node_9, ws_sales_price_node_9, ws_ext_discount_amt_node_9, ws_ext_sales_price_node_9, ws_ext_wholesale_cost_node_9, ws_ext_list_price_node_9, ws_ext_tax_node_9, ws_coupon_amt_node_9, ws_ext_ship_cost_node_9, ws_net_paid_node_9, ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax_node_9, ws_net_profit_node_9, ws_ext_list_price_node_90, p_promo_sk, p_promo_id, p_start_date_sk, p_end_date_sk, p_item_sk, p_cost, p_response_target, p_promo_name, p_channel_dmail, p_channel_email, p_channel_catalog, p_channel_tv, p_channel_radio, p_channel_press, p_channel_event, p_channel_demo, p_channel_details, p_purpose, p_discount_active], isBroadcast=[true], build=[right])\
:     :- Calc(select=[ws_sold_date_sk AS ws_sold_date_sk_node_9, ws_sold_time_sk AS ws_sold_time_sk_node_9, ws_ship_date_sk AS ws_ship_date_sk_node_9, ws_item_sk AS ws_item_sk_node_9, ws_bill_customer_sk AS ws_bill_customer_sk_node_9, ws_bill_cdemo_sk AS ws_bill_cdemo_sk_node_9, ws_bill_hdemo_sk AS ws_bill_hdemo_sk_node_9, ws_bill_addr_sk AS ws_bill_addr_sk_node_9, ws_ship_customer_sk AS ws_ship_customer_sk_node_9, ws_ship_cdemo_sk AS ws_ship_cdemo_sk_node_9, ws_ship_hdemo_sk AS ws_ship_hdemo_sk_node_9, ws_ship_addr_sk AS ws_ship_addr_sk_node_9, ws_web_page_sk AS ws_web_page_sk_node_9, ws_web_site_sk AS ws_web_site_sk_node_9, ws_ship_mode_sk AS ws_ship_mode_sk_node_9, ws_warehouse_sk AS ws_warehouse_sk_node_9, ws_promo_sk AS ws_promo_sk_node_9, ws_order_number AS ws_order_number_node_9, ws_quantity AS ws_quantity_node_9, ws_wholesale_cost AS ws_wholesale_cost_node_9, ws_list_price AS ws_list_price_node_9, ws_sales_price AS ws_sales_price_node_9, ws_ext_discount_amt AS ws_ext_discount_amt_node_9, ws_ext_sales_price AS ws_ext_sales_price_node_9, ws_ext_wholesale_cost AS ws_ext_wholesale_cost_node_9, ws_ext_list_price AS ws_ext_list_price_node_9, ws_ext_tax AS ws_ext_tax_node_9, ws_coupon_amt AS ws_coupon_amt_node_9, ws_ext_ship_cost AS ws_ext_ship_cost_node_9, ws_net_paid AS ws_net_paid_node_9, ws_net_paid_inc_tax AS ws_net_paid_inc_tax_node_9, ws_net_paid_inc_ship AS ws_net_paid_inc_ship_node_9, ws_net_paid_inc_ship_tax AS ws_net_paid_inc_ship_tax_node_9, ws_net_profit AS ws_net_profit_node_9, CAST(ws_ext_list_price AS DECIMAL(15, 2)) AS ws_ext_list_price_node_90])\
:     :  +- [#3] TableSourceScan(table=[[default_catalog, default_database, web_sales]], fields=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit])\
:     +- [#2] Exchange(distribution=[broadcast])\
+- [#1] Exchange(distribution=[broadcast])\
])
               :- Exchange(distribution=[broadcast])
               :  +- Calc(select=[s_store_sk AS s_store_sk_node_11, s_store_id AS s_store_id_node_11, s_rec_start_date AS s_rec_start_date_node_11, s_rec_end_date AS s_rec_end_date_node_11, s_closed_date_sk AS s_closed_date_sk_node_11, s_store_name AS s_store_name_node_11, s_number_employees AS s_number_employees_node_11, s_floor_space AS s_floor_space_node_11, s_hours AS s_hours_node_11, s_manager AS s_manager_node_11, s_market_id AS s_market_id_node_11, s_geography_class AS s_geography_class_node_11, s_market_desc AS s_market_desc_node_11, s_market_manager AS s_market_manager_node_11, s_division_id AS s_division_id_node_11, s_division_name AS s_division_name_node_11, s_company_id AS s_company_id_node_11, s_company_name AS s_company_name_node_11, s_street_number AS s_street_number_node_11, s_street_name AS s_street_name_node_11, s_street_type AS s_street_type_node_11, s_suite_number AS s_suite_number_node_11, s_city AS s_city_node_11, s_county AS s_county_node_11, s_state AS s_state_node_11, s_zip AS s_zip_node_11, s_country AS s_country_node_11, s_gmt_offset AS s_gmt_offset_node_11, s_tax_precentage AS s_tax_precentage_node_11, 'hello' AS _c29])
               :     +- TableSourceScan(table=[[default_catalog, default_database, store]], fields=[s_store_sk, s_store_id, s_rec_start_date, s_rec_end_date, s_closed_date_sk, s_store_name, s_number_employees, s_floor_space, s_hours, s_manager, s_market_id, s_geography_class, s_market_desc, s_market_manager, s_division_id, s_division_name, s_company_id, s_company_name, s_street_number, s_street_name, s_street_type, s_suite_number, s_city, s_county, s_state, s_zip, s_country, s_gmt_offset, s_tax_precentage])
               :- Exchange(distribution=[broadcast])
               :  +- TableSourceScan(table=[[default_catalog, default_database, promotion]], fields=[p_promo_sk, p_promo_id, p_start_date_sk, p_end_date_sk, p_item_sk, p_cost, p_response_target, p_promo_name, p_channel_dmail, p_channel_email, p_channel_catalog, p_channel_tv, p_channel_radio, p_channel_press, p_channel_event, p_channel_demo, p_channel_details, p_purpose, p_discount_active])
               +- TableSourceScan(table=[[default_catalog, default_database, web_sales]], fields=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit])

",
      "stderr": ""
    },
    "unopt": {
      "success": false,
      "error_name": "RuntimeException",
      "error_message": "An error occurred while calling o164060600.explain.
: java.lang.RuntimeException: Error while applying rule FlinkExpandConversionRule, args [rel#331333405:AbstractConverter.BATCH_PHYSICAL.hash[0]true.[21](input=RelSubset#331333403,convention=BATCH_PHYSICAL,FlinkRelDistributionTraitDef=hash[0]true,sort=[21]), rel#331333402:BatchPhysicalLocalHashAggregate.BATCH_PHYSICAL.any.[21](input=RelSubset#331333401,groupBy=cd_credit_rating,select=cd_credit_rating, Partial_MIN(d_moy) AS min$0)]
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.onMatch(VolcanoRuleCall.java:250)
\tat org.apache.calcite.plan.volcano.IterativeRuleDriver.drive(IterativeRuleDriver.java:59)
\tat org.apache.calcite.plan.volcano.VolcanoPlanner.findBestExp(VolcanoPlanner.java:523)
\tat org.apache.calcite.tools.Programs$RuleSetProgram.run(Programs.java:317)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkVolcanoProgram.optimize(FlinkVolcanoProgram.scala:62)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkChainedProgram.$anonfun$optimize$1(FlinkChainedProgram.scala:59)
\tat scala.collection.TraversableOnce$folder$1.apply(TraversableOnce.scala:196)
\tat scala.collection.TraversableOnce$folder$1.apply(TraversableOnce.scala:194)
\tat scala.collection.Iterator.foreach(Iterator.scala:943)
\tat scala.collection.Iterator.foreach$(Iterator.scala:943)
\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
\tat scala.collection.IterableLike.foreach(IterableLike.scala:74)
\tat scala.collection.IterableLike.foreach$(IterableLike.scala:73)
\tat scala.collection.AbstractIterable.foreach(Iterable.scala:56)
\tat scala.collection.TraversableOnce.foldLeft(TraversableOnce.scala:199)
\tat scala.collection.TraversableOnce.foldLeft$(TraversableOnce.scala:192)
\tat scala.collection.AbstractTraversable.foldLeft(Traversable.scala:108)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkChainedProgram.optimize(FlinkChainedProgram.scala:55)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.optimizeTree(BatchCommonSubGraphBasedOptimizer.scala:93)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.optimizeBlock(BatchCommonSubGraphBasedOptimizer.scala:58)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.$anonfun$doOptimize$1(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.$anonfun$doOptimize$1$adapted(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat scala.collection.immutable.List.foreach(List.scala:431)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.doOptimize(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat org.apache.flink.table.planner.plan.optimize.CommonSubGraphBasedOptimizer.optimize(CommonSubGraphBasedOptimizer.scala:87)
\tat org.apache.flink.table.planner.delegation.PlannerBase.optimize(PlannerBase.scala:390)
\tat org.apache.flink.table.planner.delegation.PlannerBase.getExplainGraphs(PlannerBase.scala:625)
\tat org.apache.flink.table.planner.delegation.BatchPlanner.explain(BatchPlanner.scala:149)
\tat org.apache.flink.table.planner.delegation.BatchPlanner.explain(BatchPlanner.scala:49)
\tat org.apache.flink.table.api.internal.TableEnvironmentImpl.explainInternal(TableEnvironmentImpl.java:753)
\tat org.apache.flink.table.api.internal.TableImpl.explain(TableImpl.java:482)
\tat jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)
\tat org.apache.flink.api.python.shaded.py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
\tat org.apache.flink.api.python.shaded.py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
\tat org.apache.flink.api.python.shaded.py4j.Gateway.invoke(Gateway.java:282)
\tat org.apache.flink.api.python.shaded.py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
\tat org.apache.flink.api.python.shaded.py4j.commands.CallCommand.execute(CallCommand.java:79)
\tat org.apache.flink.api.python.shaded.py4j.GatewayConnection.run(GatewayConnection.java:238)
\tat java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.RuntimeException: Error occurred while applying rule FlinkExpandConversionRule
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.transformTo(VolcanoRuleCall.java:157)
\tat org.apache.calcite.plan.RelOptRuleCall.transformTo(RelOptRuleCall.java:273)
\tat org.apache.calcite.plan.RelOptRuleCall.transformTo(RelOptRuleCall.java:288)
\tat org.apache.flink.table.planner.plan.rules.physical.FlinkExpandConversionRule.satisfyTraitsBySelf(FlinkExpandConversionRule.scala:72)
\tat org.apache.flink.table.planner.plan.rules.physical.FlinkExpandConversionRule.onMatch(FlinkExpandConversionRule.scala:52)
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.onMatch(VolcanoRuleCall.java:223)
\t... 40 more
Caused by: java.lang.ArrayIndexOutOfBoundsException
",
      "stdout": "",
      "stderr": ""
    }
  }
}
"""



//Optimizer Branch Coverage: 0