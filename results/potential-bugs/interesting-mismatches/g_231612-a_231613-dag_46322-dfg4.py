# ======== Program ========
from pyflink.table import *
from pyflink.table.expressions import *
from pyflink.table.udf import udf
from pyflink.table.types import DataTypes

from pyflink.table.udf import AggregateFunction, udaf
from pyflink.table import DataTypes
import pandas as pd

class MyObject:
    def __init__(self, name, value):
        self.name = name
        self.value = value

# UDF that returns the custom object
@udf(result_type=DataTypes.ROW([
    DataTypes.FIELD("name", DataTypes.STRING()),
    DataTypes.FIELD("value", DataTypes.INT())
]))
def preloaded_udf_complex(*input_val):
    obj = MyObject("test", hash(input_val[0]))
    return (obj.name, obj.value)  # Return as tuple

@udf(result_type=DataTypes.BOOLEAN())
def preloaded_udf_boolean(input_val):
    return True


def preloaded_aggregation(values: pd.Series) -> float:
    import numpy as np
    return np.exp(np.log(values[values > 0]).mean()) if (values > 0).all() else None


try:
    table_env.drop_temporary_function("preloaded_udf_agg")
except:
    pass

preloaded_udf_agg = udaf(preloaded_aggregation, result_type=DataTypes.BIGINT(), func_type="pandas")

table_env.create_temporary_function("preloaded_udf_agg", preloaded_udf_agg)

autonode_10 = table_env.from_path("item").select(*[col(column_name).alias(f"{column_name}_node_10") for column_name in table_env.from_path("item").get_schema().get_field_names()])
autonode_9 = table_env.from_path("catalog_sales").select(*[col(column_name).alias(f"{column_name}_node_9") for column_name in table_env.from_path("catalog_sales").get_schema().get_field_names()])
autonode_13 = table_env.from_path("date_dim").select(*[col(column_name).alias(f"{column_name}_node_13") for column_name in table_env.from_path("date_dim").get_schema().get_field_names()])
autonode_12 = table_env.from_path("customer_address").select(*[col(column_name).alias(f"{column_name}_node_12") for column_name in table_env.from_path("customer_address").get_schema().get_field_names()])
autonode_11 = table_env.from_path("web_sales").select(*[col(column_name).alias(f"{column_name}_node_11") for column_name in table_env.from_path("web_sales").get_schema().get_field_names()])
autonode_14 = table_env.from_path("warehouse").select(*[col(column_name).alias(f"{column_name}_node_14") for column_name in table_env.from_path("warehouse").get_schema().get_field_names()])
autonode_6 = autonode_9.join(autonode_10, col('cs_bill_addr_sk_node_9') == col('i_item_sk_node_10'))
autonode_7 = autonode_11.join(autonode_12, col('ws_bill_hdemo_sk_node_11') == col('ca_address_sk_node_12'))
autonode_8 = autonode_13.join(autonode_14, col('d_quarter_seq_node_13') == col('w_warehouse_sq_ft_node_14'))
autonode_4 = autonode_6.add_columns(lit("hello"))
autonode_5 = autonode_7.join(autonode_8, col('w_warehouse_sk_node_14') == col('ca_address_sk_node_12'))
autonode_2 = autonode_4.order_by(col('i_manager_id_node_10'))
autonode_3 = autonode_5.limit(67)
autonode_1 = autonode_2.join(autonode_3, col('cs_ext_list_price_node_9') == col('w_gmt_offset_node_14'))
sink = autonode_1.group_by(col('i_wholesale_cost_node_10')).select(col('cs_wholesale_cost_node_9').max.alias('cs_wholesale_cost_node_9'))
print(sink.explain())

# ======== Details ========
"""
{
  "is_same": false,
  "result_name": "MismatchException",
  "result_details": {
    "opt": {
      "success": true,
      "error_name": "",
      "error_message": "",
      "stdout": "== Abstract Syntax Tree ==
LogicalProject(cs_wholesale_cost_node_9=[$1])
+- LogicalAggregate(group=[{40}], EXPR$0=[MAX($19)])
   +- LogicalJoin(condition=[=($25, $145)], joinType=[inner])
      :- LogicalSort(sort0=[$54], dir0=[ASC])
      :  +- LogicalProject(cs_sold_date_sk_node_9=[$0], cs_sold_time_sk_node_9=[$1], cs_ship_date_sk_node_9=[$2], cs_bill_customer_sk_node_9=[$3], cs_bill_cdemo_sk_node_9=[$4], cs_bill_hdemo_sk_node_9=[$5], cs_bill_addr_sk_node_9=[$6], cs_ship_customer_sk_node_9=[$7], cs_ship_cdemo_sk_node_9=[$8], cs_ship_hdemo_sk_node_9=[$9], cs_ship_addr_sk_node_9=[$10], cs_call_center_sk_node_9=[$11], cs_catalog_page_sk_node_9=[$12], cs_ship_mode_sk_node_9=[$13], cs_warehouse_sk_node_9=[$14], cs_item_sk_node_9=[$15], cs_promo_sk_node_9=[$16], cs_order_number_node_9=[$17], cs_quantity_node_9=[$18], cs_wholesale_cost_node_9=[$19], cs_list_price_node_9=[$20], cs_sales_price_node_9=[$21], cs_ext_discount_amt_node_9=[$22], cs_ext_sales_price_node_9=[$23], cs_ext_wholesale_cost_node_9=[$24], cs_ext_list_price_node_9=[$25], cs_ext_tax_node_9=[$26], cs_coupon_amt_node_9=[$27], cs_ext_ship_cost_node_9=[$28], cs_net_paid_node_9=[$29], cs_net_paid_inc_tax_node_9=[$30], cs_net_paid_inc_ship_node_9=[$31], cs_net_paid_inc_ship_tax_node_9=[$32], cs_net_profit_node_9=[$33], i_item_sk_node_10=[$34], i_item_id_node_10=[$35], i_rec_start_date_node_10=[$36], i_rec_end_date_node_10=[$37], i_item_desc_node_10=[$38], i_current_price_node_10=[$39], i_wholesale_cost_node_10=[$40], i_brand_id_node_10=[$41], i_brand_node_10=[$42], i_class_id_node_10=[$43], i_class_node_10=[$44], i_category_id_node_10=[$45], i_category_node_10=[$46], i_manufact_id_node_10=[$47], i_manufact_node_10=[$48], i_size_node_10=[$49], i_formulation_node_10=[$50], i_color_node_10=[$51], i_units_node_10=[$52], i_container_node_10=[$53], i_manager_id_node_10=[$54], i_product_name_node_10=[$55], _c56=[_UTF-16LE'hello'])
      :     +- LogicalJoin(condition=[=($6, $34)], joinType=[inner])
      :        :- LogicalProject(cs_sold_date_sk_node_9=[$0], cs_sold_time_sk_node_9=[$1], cs_ship_date_sk_node_9=[$2], cs_bill_customer_sk_node_9=[$3], cs_bill_cdemo_sk_node_9=[$4], cs_bill_hdemo_sk_node_9=[$5], cs_bill_addr_sk_node_9=[$6], cs_ship_customer_sk_node_9=[$7], cs_ship_cdemo_sk_node_9=[$8], cs_ship_hdemo_sk_node_9=[$9], cs_ship_addr_sk_node_9=[$10], cs_call_center_sk_node_9=[$11], cs_catalog_page_sk_node_9=[$12], cs_ship_mode_sk_node_9=[$13], cs_warehouse_sk_node_9=[$14], cs_item_sk_node_9=[$15], cs_promo_sk_node_9=[$16], cs_order_number_node_9=[$17], cs_quantity_node_9=[$18], cs_wholesale_cost_node_9=[$19], cs_list_price_node_9=[$20], cs_sales_price_node_9=[$21], cs_ext_discount_amt_node_9=[$22], cs_ext_sales_price_node_9=[$23], cs_ext_wholesale_cost_node_9=[$24], cs_ext_list_price_node_9=[$25], cs_ext_tax_node_9=[$26], cs_coupon_amt_node_9=[$27], cs_ext_ship_cost_node_9=[$28], cs_net_paid_node_9=[$29], cs_net_paid_inc_tax_node_9=[$30], cs_net_paid_inc_ship_node_9=[$31], cs_net_paid_inc_ship_tax_node_9=[$32], cs_net_profit_node_9=[$33])
      :        :  +- LogicalTableScan(table=[[default_catalog, default_database, catalog_sales]])
      :        +- LogicalProject(i_item_sk_node_10=[$0], i_item_id_node_10=[$1], i_rec_start_date_node_10=[$2], i_rec_end_date_node_10=[$3], i_item_desc_node_10=[$4], i_current_price_node_10=[$5], i_wholesale_cost_node_10=[$6], i_brand_id_node_10=[$7], i_brand_node_10=[$8], i_class_id_node_10=[$9], i_class_node_10=[$10], i_category_id_node_10=[$11], i_category_node_10=[$12], i_manufact_id_node_10=[$13], i_manufact_node_10=[$14], i_size_node_10=[$15], i_formulation_node_10=[$16], i_color_node_10=[$17], i_units_node_10=[$18], i_container_node_10=[$19], i_manager_id_node_10=[$20], i_product_name_node_10=[$21])
      :           +- LogicalTableScan(table=[[default_catalog, default_database, item]])
      +- LogicalSort(fetch=[67])
         +- LogicalJoin(condition=[=($75, $34)], joinType=[inner])
            :- LogicalJoin(condition=[=($6, $34)], joinType=[inner])
            :  :- LogicalProject(ws_sold_date_sk_node_11=[$0], ws_sold_time_sk_node_11=[$1], ws_ship_date_sk_node_11=[$2], ws_item_sk_node_11=[$3], ws_bill_customer_sk_node_11=[$4], ws_bill_cdemo_sk_node_11=[$5], ws_bill_hdemo_sk_node_11=[$6], ws_bill_addr_sk_node_11=[$7], ws_ship_customer_sk_node_11=[$8], ws_ship_cdemo_sk_node_11=[$9], ws_ship_hdemo_sk_node_11=[$10], ws_ship_addr_sk_node_11=[$11], ws_web_page_sk_node_11=[$12], ws_web_site_sk_node_11=[$13], ws_ship_mode_sk_node_11=[$14], ws_warehouse_sk_node_11=[$15], ws_promo_sk_node_11=[$16], ws_order_number_node_11=[$17], ws_quantity_node_11=[$18], ws_wholesale_cost_node_11=[$19], ws_list_price_node_11=[$20], ws_sales_price_node_11=[$21], ws_ext_discount_amt_node_11=[$22], ws_ext_sales_price_node_11=[$23], ws_ext_wholesale_cost_node_11=[$24], ws_ext_list_price_node_11=[$25], ws_ext_tax_node_11=[$26], ws_coupon_amt_node_11=[$27], ws_ext_ship_cost_node_11=[$28], ws_net_paid_node_11=[$29], ws_net_paid_inc_tax_node_11=[$30], ws_net_paid_inc_ship_node_11=[$31], ws_net_paid_inc_ship_tax_node_11=[$32], ws_net_profit_node_11=[$33])
            :  :  +- LogicalTableScan(table=[[default_catalog, default_database, web_sales]])
            :  +- LogicalProject(ca_address_sk_node_12=[$0], ca_address_id_node_12=[$1], ca_street_number_node_12=[$2], ca_street_name_node_12=[$3], ca_street_type_node_12=[$4], ca_suite_number_node_12=[$5], ca_city_node_12=[$6], ca_county_node_12=[$7], ca_state_node_12=[$8], ca_zip_node_12=[$9], ca_country_node_12=[$10], ca_gmt_offset_node_12=[$11], ca_location_type_node_12=[$12])
            :     +- LogicalTableScan(table=[[default_catalog, default_database, customer_address]])
            +- LogicalJoin(condition=[=($5, $31)], joinType=[inner])
               :- LogicalProject(d_date_sk_node_13=[$0], d_date_id_node_13=[$1], d_date_node_13=[$2], d_month_seq_node_13=[$3], d_week_seq_node_13=[$4], d_quarter_seq_node_13=[$5], d_year_node_13=[$6], d_dow_node_13=[$7], d_moy_node_13=[$8], d_dom_node_13=[$9], d_qoy_node_13=[$10], d_fy_year_node_13=[$11], d_fy_quarter_seq_node_13=[$12], d_fy_week_seq_node_13=[$13], d_day_name_node_13=[$14], d_quarter_name_node_13=[$15], d_holiday_node_13=[$16], d_weekend_node_13=[$17], d_following_holiday_node_13=[$18], d_first_dom_node_13=[$19], d_last_dom_node_13=[$20], d_same_day_ly_node_13=[$21], d_same_day_lq_node_13=[$22], d_current_day_node_13=[$23], d_current_week_node_13=[$24], d_current_month_node_13=[$25], d_current_quarter_node_13=[$26], d_current_year_node_13=[$27])
               :  +- LogicalTableScan(table=[[default_catalog, default_database, date_dim]])
               +- LogicalProject(w_warehouse_sk_node_14=[$0], w_warehouse_id_node_14=[$1], w_warehouse_name_node_14=[$2], w_warehouse_sq_ft_node_14=[$3], w_street_number_node_14=[$4], w_street_name_node_14=[$5], w_street_type_node_14=[$6], w_suite_number_node_14=[$7], w_city_node_14=[$8], w_county_node_14=[$9], w_state_node_14=[$10], w_zip_node_14=[$11], w_country_node_14=[$12], w_gmt_offset_node_14=[$13])
                  +- LogicalTableScan(table=[[default_catalog, default_database, warehouse]])

== Optimized Physical Plan ==
Calc(select=[EXPR$0 AS cs_wholesale_cost_node_9])
+- HashAggregate(isMerge=[false], groupBy=[i_wholesale_cost_node_10], select=[i_wholesale_cost_node_10, MAX(cs_wholesale_cost_node_9) AS EXPR$0])
   +- Exchange(distribution=[hash[i_wholesale_cost_node_10]])
      +- Calc(select=[cs_sold_date_sk AS cs_sold_date_sk_node_9, cs_sold_time_sk AS cs_sold_time_sk_node_9, cs_ship_date_sk AS cs_ship_date_sk_node_9, cs_bill_customer_sk AS cs_bill_customer_sk_node_9, cs_bill_cdemo_sk AS cs_bill_cdemo_sk_node_9, cs_bill_hdemo_sk AS cs_bill_hdemo_sk_node_9, cs_bill_addr_sk AS cs_bill_addr_sk_node_9, cs_ship_customer_sk AS cs_ship_customer_sk_node_9, cs_ship_cdemo_sk AS cs_ship_cdemo_sk_node_9, cs_ship_hdemo_sk AS cs_ship_hdemo_sk_node_9, cs_ship_addr_sk AS cs_ship_addr_sk_node_9, cs_call_center_sk AS cs_call_center_sk_node_9, cs_catalog_page_sk AS cs_catalog_page_sk_node_9, cs_ship_mode_sk AS cs_ship_mode_sk_node_9, cs_warehouse_sk AS cs_warehouse_sk_node_9, cs_item_sk AS cs_item_sk_node_9, cs_promo_sk AS cs_promo_sk_node_9, cs_order_number AS cs_order_number_node_9, cs_quantity AS cs_quantity_node_9, cs_wholesale_cost AS cs_wholesale_cost_node_9, cs_list_price AS cs_list_price_node_9, cs_sales_price AS cs_sales_price_node_9, cs_ext_discount_amt AS cs_ext_discount_amt_node_9, cs_ext_sales_price AS cs_ext_sales_price_node_9, cs_ext_wholesale_cost AS cs_ext_wholesale_cost_node_9, cs_ext_list_price AS cs_ext_list_price_node_9, cs_ext_tax AS cs_ext_tax_node_9, cs_coupon_amt AS cs_coupon_amt_node_9, cs_ext_ship_cost AS cs_ext_ship_cost_node_9, cs_net_paid AS cs_net_paid_node_9, cs_net_paid_inc_tax AS cs_net_paid_inc_tax_node_9, cs_net_paid_inc_ship AS cs_net_paid_inc_ship_node_9, cs_net_paid_inc_ship_tax AS cs_net_paid_inc_ship_tax_node_9, cs_net_profit AS cs_net_profit_node_9, i_item_sk AS i_item_sk_node_10, i_item_id AS i_item_id_node_10, i_rec_start_date AS i_rec_start_date_node_10, i_rec_end_date AS i_rec_end_date_node_10, i_item_desc AS i_item_desc_node_10, i_current_price AS i_current_price_node_10, i_wholesale_cost AS i_wholesale_cost_node_10, i_brand_id AS i_brand_id_node_10, i_brand AS i_brand_node_10, i_class_id AS i_class_id_node_10, i_class AS i_class_node_10, i_category_id AS i_category_id_node_10, i_category AS i_category_node_10, i_manufact_id AS i_manufact_id_node_10, i_manufact AS i_manufact_node_10, i_size AS i_size_node_10, i_formulation AS i_formulation_node_10, i_color AS i_color_node_10, i_units AS i_units_node_10, i_container AS i_container_node_10, i_manager_id AS i_manager_id_node_10, i_product_name AS i_product_name_node_10, 'hello' AS _c56, ws_sold_date_sk_node_11, ws_sold_time_sk_node_11, ws_ship_date_sk_node_11, ws_item_sk_node_11, ws_bill_customer_sk_node_11, ws_bill_cdemo_sk_node_11, ws_bill_hdemo_sk_node_11, ws_bill_addr_sk_node_11, ws_ship_customer_sk_node_11, ws_ship_cdemo_sk_node_11, ws_ship_hdemo_sk_node_11, ws_ship_addr_sk_node_11, ws_web_page_sk_node_11, ws_web_site_sk_node_11, ws_ship_mode_sk_node_11, ws_warehouse_sk_node_11, ws_promo_sk_node_11, ws_order_number_node_11, ws_quantity_node_11, ws_wholesale_cost_node_11, ws_list_price_node_11, ws_sales_price_node_11, ws_ext_discount_amt_node_11, ws_ext_sales_price_node_11, ws_ext_wholesale_cost_node_11, ws_ext_list_price_node_11, ws_ext_tax_node_11, ws_coupon_amt_node_11, ws_ext_ship_cost_node_11, ws_net_paid_node_11, ws_net_paid_inc_tax_node_11, ws_net_paid_inc_ship_node_11, ws_net_paid_inc_ship_tax_node_11, ws_net_profit_node_11, ca_address_sk_node_12, ca_address_id_node_12, ca_street_number_node_12, ca_street_name_node_12, ca_street_type_node_12, ca_suite_number_node_12, ca_city_node_12, ca_county_node_12, ca_state_node_12, ca_zip_node_12, ca_country_node_12, ca_gmt_offset_node_12, ca_location_type_node_12, d_date_sk_node_13, d_date_id_node_13, d_date_node_13, d_month_seq_node_13, d_week_seq_node_13, d_quarter_seq_node_13, d_year_node_13, d_dow_node_13, d_moy_node_13, d_dom_node_13, d_qoy_node_13, d_fy_year_node_13, d_fy_quarter_seq_node_13, d_fy_week_seq_node_13, d_day_name_node_13, d_quarter_name_node_13, d_holiday_node_13, d_weekend_node_13, d_following_holiday_node_13, d_first_dom_node_13, d_last_dom_node_13, d_same_day_ly_node_13, d_same_day_lq_node_13, d_current_day_node_13, d_current_week_node_13, d_current_month_node_13, d_current_quarter_node_13, d_current_year_node_13, w_warehouse_sk_node_14, w_warehouse_id_node_14, w_warehouse_name_node_14, w_warehouse_sq_ft_node_14, w_street_number_node_14, w_street_name_node_14, w_street_type_node_14, w_suite_number_node_14, w_city_node_14, w_county_node_14, w_state_node_14, w_zip_node_14, w_country_node_14, w_gmt_offset_node_14])
         +- HashJoin(joinType=[InnerJoin], where=[=(cs_ext_list_price, w_gmt_offset_node_140)], select=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit, i_item_sk, i_item_id, i_rec_start_date, i_rec_end_date, i_item_desc, i_current_price, i_wholesale_cost, i_brand_id, i_brand, i_class_id, i_class, i_category_id, i_category, i_manufact_id, i_manufact, i_size, i_formulation, i_color, i_units, i_container, i_manager_id, i_product_name, ws_sold_date_sk_node_11, ws_sold_time_sk_node_11, ws_ship_date_sk_node_11, ws_item_sk_node_11, ws_bill_customer_sk_node_11, ws_bill_cdemo_sk_node_11, ws_bill_hdemo_sk_node_11, ws_bill_addr_sk_node_11, ws_ship_customer_sk_node_11, ws_ship_cdemo_sk_node_11, ws_ship_hdemo_sk_node_11, ws_ship_addr_sk_node_11, ws_web_page_sk_node_11, ws_web_site_sk_node_11, ws_ship_mode_sk_node_11, ws_warehouse_sk_node_11, ws_promo_sk_node_11, ws_order_number_node_11, ws_quantity_node_11, ws_wholesale_cost_node_11, ws_list_price_node_11, ws_sales_price_node_11, ws_ext_discount_amt_node_11, ws_ext_sales_price_node_11, ws_ext_wholesale_cost_node_11, ws_ext_list_price_node_11, ws_ext_tax_node_11, ws_coupon_amt_node_11, ws_ext_ship_cost_node_11, ws_net_paid_node_11, ws_net_paid_inc_tax_node_11, ws_net_paid_inc_ship_node_11, ws_net_paid_inc_ship_tax_node_11, ws_net_profit_node_11, ca_address_sk_node_12, ca_address_id_node_12, ca_street_number_node_12, ca_street_name_node_12, ca_street_type_node_12, ca_suite_number_node_12, ca_city_node_12, ca_county_node_12, ca_state_node_12, ca_zip_node_12, ca_country_node_12, ca_gmt_offset_node_12, ca_location_type_node_12, d_date_sk_node_13, d_date_id_node_13, d_date_node_13, d_month_seq_node_13, d_week_seq_node_13, d_quarter_seq_node_13, d_year_node_13, d_dow_node_13, d_moy_node_13, d_dom_node_13, d_qoy_node_13, d_fy_year_node_13, d_fy_quarter_seq_node_13, d_fy_week_seq_node_13, d_day_name_node_13, d_quarter_name_node_13, d_holiday_node_13, d_weekend_node_13, d_following_holiday_node_13, d_first_dom_node_13, d_last_dom_node_13, d_same_day_ly_node_13, d_same_day_lq_node_13, d_current_day_node_13, d_current_week_node_13, d_current_month_node_13, d_current_quarter_node_13, d_current_year_node_13, w_warehouse_sk_node_14, w_warehouse_id_node_14, w_warehouse_name_node_14, w_warehouse_sq_ft_node_14, w_street_number_node_14, w_street_name_node_14, w_street_type_node_14, w_suite_number_node_14, w_city_node_14, w_county_node_14, w_state_node_14, w_zip_node_14, w_country_node_14, w_gmt_offset_node_14, w_gmt_offset_node_140], isBroadcast=[true], build=[right])
            :- Sort(orderBy=[i_manager_id ASC])
            :  +- Exchange(distribution=[single])
            :     +- HashJoin(joinType=[InnerJoin], where=[=(cs_bill_addr_sk, i_item_sk)], select=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit, i_item_sk, i_item_id, i_rec_start_date, i_rec_end_date, i_item_desc, i_current_price, i_wholesale_cost, i_brand_id, i_brand, i_class_id, i_class, i_category_id, i_category, i_manufact_id, i_manufact, i_size, i_formulation, i_color, i_units, i_container, i_manager_id, i_product_name], build=[right])
            :        :- Exchange(distribution=[hash[cs_bill_addr_sk]])
            :        :  +- TableSourceScan(table=[[default_catalog, default_database, catalog_sales]], fields=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit])
            :        +- Exchange(distribution=[hash[i_item_sk]])
            :           +- TableSourceScan(table=[[default_catalog, default_database, item]], fields=[i_item_sk, i_item_id, i_rec_start_date, i_rec_end_date, i_item_desc, i_current_price, i_wholesale_cost, i_brand_id, i_brand, i_class_id, i_class, i_category_id, i_category, i_manufact_id, i_manufact, i_size, i_formulation, i_color, i_units, i_container, i_manager_id, i_product_name])
            +- Exchange(distribution=[broadcast])
               +- Calc(select=[ws_sold_date_sk AS ws_sold_date_sk_node_11, ws_sold_time_sk AS ws_sold_time_sk_node_11, ws_ship_date_sk AS ws_ship_date_sk_node_11, ws_item_sk AS ws_item_sk_node_11, ws_bill_customer_sk AS ws_bill_customer_sk_node_11, ws_bill_cdemo_sk AS ws_bill_cdemo_sk_node_11, ws_bill_hdemo_sk AS ws_bill_hdemo_sk_node_11, ws_bill_addr_sk AS ws_bill_addr_sk_node_11, ws_ship_customer_sk AS ws_ship_customer_sk_node_11, ws_ship_cdemo_sk AS ws_ship_cdemo_sk_node_11, ws_ship_hdemo_sk AS ws_ship_hdemo_sk_node_11, ws_ship_addr_sk AS ws_ship_addr_sk_node_11, ws_web_page_sk AS ws_web_page_sk_node_11, ws_web_site_sk AS ws_web_site_sk_node_11, ws_ship_mode_sk AS ws_ship_mode_sk_node_11, ws_warehouse_sk AS ws_warehouse_sk_node_11, ws_promo_sk AS ws_promo_sk_node_11, ws_order_number AS ws_order_number_node_11, ws_quantity AS ws_quantity_node_11, ws_wholesale_cost AS ws_wholesale_cost_node_11, ws_list_price AS ws_list_price_node_11, ws_sales_price AS ws_sales_price_node_11, ws_ext_discount_amt AS ws_ext_discount_amt_node_11, ws_ext_sales_price AS ws_ext_sales_price_node_11, ws_ext_wholesale_cost AS ws_ext_wholesale_cost_node_11, ws_ext_list_price AS ws_ext_list_price_node_11, ws_ext_tax AS ws_ext_tax_node_11, ws_coupon_amt AS ws_coupon_amt_node_11, ws_ext_ship_cost AS ws_ext_ship_cost_node_11, ws_net_paid AS ws_net_paid_node_11, ws_net_paid_inc_tax AS ws_net_paid_inc_tax_node_11, ws_net_paid_inc_ship AS ws_net_paid_inc_ship_node_11, ws_net_paid_inc_ship_tax AS ws_net_paid_inc_ship_tax_node_11, ws_net_profit AS ws_net_profit_node_11, ca_address_sk AS ca_address_sk_node_12, ca_address_id AS ca_address_id_node_12, ca_street_number AS ca_street_number_node_12, ca_street_name AS ca_street_name_node_12, ca_street_type AS ca_street_type_node_12, ca_suite_number AS ca_suite_number_node_12, ca_city AS ca_city_node_12, ca_county AS ca_county_node_12, ca_state AS ca_state_node_12, ca_zip AS ca_zip_node_12, ca_country AS ca_country_node_12, ca_gmt_offset AS ca_gmt_offset_node_12, ca_location_type AS ca_location_type_node_12, d_date_sk AS d_date_sk_node_13, d_date_id AS d_date_id_node_13, d_date AS d_date_node_13, d_month_seq AS d_month_seq_node_13, d_week_seq AS d_week_seq_node_13, d_quarter_seq AS d_quarter_seq_node_13, d_year AS d_year_node_13, d_dow AS d_dow_node_13, d_moy AS d_moy_node_13, d_dom AS d_dom_node_13, d_qoy AS d_qoy_node_13, d_fy_year AS d_fy_year_node_13, d_fy_quarter_seq AS d_fy_quarter_seq_node_13, d_fy_week_seq AS d_fy_week_seq_node_13, d_day_name AS d_day_name_node_13, d_quarter_name AS d_quarter_name_node_13, d_holiday AS d_holiday_node_13, d_weekend AS d_weekend_node_13, d_following_holiday AS d_following_holiday_node_13, d_first_dom AS d_first_dom_node_13, d_last_dom AS d_last_dom_node_13, d_same_day_ly AS d_same_day_ly_node_13, d_same_day_lq AS d_same_day_lq_node_13, d_current_day AS d_current_day_node_13, d_current_week AS d_current_week_node_13, d_current_month AS d_current_month_node_13, d_current_quarter AS d_current_quarter_node_13, d_current_year AS d_current_year_node_13, w_warehouse_sk AS w_warehouse_sk_node_14, w_warehouse_id AS w_warehouse_id_node_14, w_warehouse_name AS w_warehouse_name_node_14, w_warehouse_sq_ft AS w_warehouse_sq_ft_node_14, w_street_number AS w_street_number_node_14, w_street_name AS w_street_name_node_14, w_street_type AS w_street_type_node_14, w_suite_number AS w_suite_number_node_14, w_city AS w_city_node_14, w_county AS w_county_node_14, w_state AS w_state_node_14, w_zip AS w_zip_node_14, w_country AS w_country_node_14, w_gmt_offset AS w_gmt_offset_node_14, CAST(w_gmt_offset AS DECIMAL(7, 2)) AS w_gmt_offset_node_140])
                  +- Limit(offset=[0], fetch=[67], global=[true])
                     +- Exchange(distribution=[single])
                        +- Limit(offset=[0], fetch=[67], global=[false])
                           +- HashJoin(joinType=[InnerJoin], where=[=(w_warehouse_sk, ca_address_sk)], select=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit, ca_address_sk, ca_address_id, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type, d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year, w_warehouse_sk, w_warehouse_id, w_warehouse_name, w_warehouse_sq_ft, w_street_number, w_street_name, w_street_type, w_suite_number, w_city, w_county, w_state, w_zip, w_country, w_gmt_offset], build=[right])
                              :- HashJoin(joinType=[InnerJoin], where=[=(ws_bill_hdemo_sk, ca_address_sk)], select=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit, ca_address_sk, ca_address_id, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type], build=[right])
                              :  :- Exchange(distribution=[hash[ws_bill_hdemo_sk]])
                              :  :  +- TableSourceScan(table=[[default_catalog, default_database, web_sales]], fields=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit])
                              :  +- Exchange(distribution=[hash[ca_address_sk]])
                              :     +- TableSourceScan(table=[[default_catalog, default_database, customer_address]], fields=[ca_address_sk, ca_address_id, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type])
                              +- Exchange(distribution=[hash[w_warehouse_sk]])
                                 +- NestedLoopJoin(joinType=[InnerJoin], where=[=(d_quarter_seq, w_warehouse_sq_ft)], select=[d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year, w_warehouse_sk, w_warehouse_id, w_warehouse_name, w_warehouse_sq_ft, w_street_number, w_street_name, w_street_type, w_suite_number, w_city, w_county, w_state, w_zip, w_country, w_gmt_offset], build=[right])
                                    :- TableSourceScan(table=[[default_catalog, default_database, date_dim]], fields=[d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year])
                                    +- Exchange(distribution=[broadcast])
                                       +- TableSourceScan(table=[[default_catalog, default_database, warehouse]], fields=[w_warehouse_sk, w_warehouse_id, w_warehouse_name, w_warehouse_sq_ft, w_street_number, w_street_name, w_street_type, w_suite_number, w_city, w_county, w_state, w_zip, w_country, w_gmt_offset])

== Optimized Execution Plan ==
Calc(select=[EXPR$0 AS cs_wholesale_cost_node_9])
+- HashAggregate(isMerge=[false], groupBy=[i_wholesale_cost_node_10], select=[i_wholesale_cost_node_10, MAX(cs_wholesale_cost_node_9) AS EXPR$0])
   +- Exchange(distribution=[hash[i_wholesale_cost_node_10]])
      +- Calc(select=[cs_sold_date_sk AS cs_sold_date_sk_node_9, cs_sold_time_sk AS cs_sold_time_sk_node_9, cs_ship_date_sk AS cs_ship_date_sk_node_9, cs_bill_customer_sk AS cs_bill_customer_sk_node_9, cs_bill_cdemo_sk AS cs_bill_cdemo_sk_node_9, cs_bill_hdemo_sk AS cs_bill_hdemo_sk_node_9, cs_bill_addr_sk AS cs_bill_addr_sk_node_9, cs_ship_customer_sk AS cs_ship_customer_sk_node_9, cs_ship_cdemo_sk AS cs_ship_cdemo_sk_node_9, cs_ship_hdemo_sk AS cs_ship_hdemo_sk_node_9, cs_ship_addr_sk AS cs_ship_addr_sk_node_9, cs_call_center_sk AS cs_call_center_sk_node_9, cs_catalog_page_sk AS cs_catalog_page_sk_node_9, cs_ship_mode_sk AS cs_ship_mode_sk_node_9, cs_warehouse_sk AS cs_warehouse_sk_node_9, cs_item_sk AS cs_item_sk_node_9, cs_promo_sk AS cs_promo_sk_node_9, cs_order_number AS cs_order_number_node_9, cs_quantity AS cs_quantity_node_9, cs_wholesale_cost AS cs_wholesale_cost_node_9, cs_list_price AS cs_list_price_node_9, cs_sales_price AS cs_sales_price_node_9, cs_ext_discount_amt AS cs_ext_discount_amt_node_9, cs_ext_sales_price AS cs_ext_sales_price_node_9, cs_ext_wholesale_cost AS cs_ext_wholesale_cost_node_9, cs_ext_list_price AS cs_ext_list_price_node_9, cs_ext_tax AS cs_ext_tax_node_9, cs_coupon_amt AS cs_coupon_amt_node_9, cs_ext_ship_cost AS cs_ext_ship_cost_node_9, cs_net_paid AS cs_net_paid_node_9, cs_net_paid_inc_tax AS cs_net_paid_inc_tax_node_9, cs_net_paid_inc_ship AS cs_net_paid_inc_ship_node_9, cs_net_paid_inc_ship_tax AS cs_net_paid_inc_ship_tax_node_9, cs_net_profit AS cs_net_profit_node_9, i_item_sk AS i_item_sk_node_10, i_item_id AS i_item_id_node_10, i_rec_start_date AS i_rec_start_date_node_10, i_rec_end_date AS i_rec_end_date_node_10, i_item_desc AS i_item_desc_node_10, i_current_price AS i_current_price_node_10, i_wholesale_cost AS i_wholesale_cost_node_10, i_brand_id AS i_brand_id_node_10, i_brand AS i_brand_node_10, i_class_id AS i_class_id_node_10, i_class AS i_class_node_10, i_category_id AS i_category_id_node_10, i_category AS i_category_node_10, i_manufact_id AS i_manufact_id_node_10, i_manufact AS i_manufact_node_10, i_size AS i_size_node_10, i_formulation AS i_formulation_node_10, i_color AS i_color_node_10, i_units AS i_units_node_10, i_container AS i_container_node_10, i_manager_id AS i_manager_id_node_10, i_product_name AS i_product_name_node_10, 'hello' AS _c56, ws_sold_date_sk_node_11, ws_sold_time_sk_node_11, ws_ship_date_sk_node_11, ws_item_sk_node_11, ws_bill_customer_sk_node_11, ws_bill_cdemo_sk_node_11, ws_bill_hdemo_sk_node_11, ws_bill_addr_sk_node_11, ws_ship_customer_sk_node_11, ws_ship_cdemo_sk_node_11, ws_ship_hdemo_sk_node_11, ws_ship_addr_sk_node_11, ws_web_page_sk_node_11, ws_web_site_sk_node_11, ws_ship_mode_sk_node_11, ws_warehouse_sk_node_11, ws_promo_sk_node_11, ws_order_number_node_11, ws_quantity_node_11, ws_wholesale_cost_node_11, ws_list_price_node_11, ws_sales_price_node_11, ws_ext_discount_amt_node_11, ws_ext_sales_price_node_11, ws_ext_wholesale_cost_node_11, ws_ext_list_price_node_11, ws_ext_tax_node_11, ws_coupon_amt_node_11, ws_ext_ship_cost_node_11, ws_net_paid_node_11, ws_net_paid_inc_tax_node_11, ws_net_paid_inc_ship_node_11, ws_net_paid_inc_ship_tax_node_11, ws_net_profit_node_11, ca_address_sk_node_12, ca_address_id_node_12, ca_street_number_node_12, ca_street_name_node_12, ca_street_type_node_12, ca_suite_number_node_12, ca_city_node_12, ca_county_node_12, ca_state_node_12, ca_zip_node_12, ca_country_node_12, ca_gmt_offset_node_12, ca_location_type_node_12, d_date_sk_node_13, d_date_id_node_13, d_date_node_13, d_month_seq_node_13, d_week_seq_node_13, d_quarter_seq_node_13, d_year_node_13, d_dow_node_13, d_moy_node_13, d_dom_node_13, d_qoy_node_13, d_fy_year_node_13, d_fy_quarter_seq_node_13, d_fy_week_seq_node_13, d_day_name_node_13, d_quarter_name_node_13, d_holiday_node_13, d_weekend_node_13, d_following_holiday_node_13, d_first_dom_node_13, d_last_dom_node_13, d_same_day_ly_node_13, d_same_day_lq_node_13, d_current_day_node_13, d_current_week_node_13, d_current_month_node_13, d_current_quarter_node_13, d_current_year_node_13, w_warehouse_sk_node_14, w_warehouse_id_node_14, w_warehouse_name_node_14, w_warehouse_sq_ft_node_14, w_street_number_node_14, w_street_name_node_14, w_street_type_node_14, w_suite_number_node_14, w_city_node_14, w_county_node_14, w_state_node_14, w_zip_node_14, w_country_node_14, w_gmt_offset_node_14])
         +- HashJoin(joinType=[InnerJoin], where=[(cs_ext_list_price = w_gmt_offset_node_140)], select=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit, i_item_sk, i_item_id, i_rec_start_date, i_rec_end_date, i_item_desc, i_current_price, i_wholesale_cost, i_brand_id, i_brand, i_class_id, i_class, i_category_id, i_category, i_manufact_id, i_manufact, i_size, i_formulation, i_color, i_units, i_container, i_manager_id, i_product_name, ws_sold_date_sk_node_11, ws_sold_time_sk_node_11, ws_ship_date_sk_node_11, ws_item_sk_node_11, ws_bill_customer_sk_node_11, ws_bill_cdemo_sk_node_11, ws_bill_hdemo_sk_node_11, ws_bill_addr_sk_node_11, ws_ship_customer_sk_node_11, ws_ship_cdemo_sk_node_11, ws_ship_hdemo_sk_node_11, ws_ship_addr_sk_node_11, ws_web_page_sk_node_11, ws_web_site_sk_node_11, ws_ship_mode_sk_node_11, ws_warehouse_sk_node_11, ws_promo_sk_node_11, ws_order_number_node_11, ws_quantity_node_11, ws_wholesale_cost_node_11, ws_list_price_node_11, ws_sales_price_node_11, ws_ext_discount_amt_node_11, ws_ext_sales_price_node_11, ws_ext_wholesale_cost_node_11, ws_ext_list_price_node_11, ws_ext_tax_node_11, ws_coupon_amt_node_11, ws_ext_ship_cost_node_11, ws_net_paid_node_11, ws_net_paid_inc_tax_node_11, ws_net_paid_inc_ship_node_11, ws_net_paid_inc_ship_tax_node_11, ws_net_profit_node_11, ca_address_sk_node_12, ca_address_id_node_12, ca_street_number_node_12, ca_street_name_node_12, ca_street_type_node_12, ca_suite_number_node_12, ca_city_node_12, ca_county_node_12, ca_state_node_12, ca_zip_node_12, ca_country_node_12, ca_gmt_offset_node_12, ca_location_type_node_12, d_date_sk_node_13, d_date_id_node_13, d_date_node_13, d_month_seq_node_13, d_week_seq_node_13, d_quarter_seq_node_13, d_year_node_13, d_dow_node_13, d_moy_node_13, d_dom_node_13, d_qoy_node_13, d_fy_year_node_13, d_fy_quarter_seq_node_13, d_fy_week_seq_node_13, d_day_name_node_13, d_quarter_name_node_13, d_holiday_node_13, d_weekend_node_13, d_following_holiday_node_13, d_first_dom_node_13, d_last_dom_node_13, d_same_day_ly_node_13, d_same_day_lq_node_13, d_current_day_node_13, d_current_week_node_13, d_current_month_node_13, d_current_quarter_node_13, d_current_year_node_13, w_warehouse_sk_node_14, w_warehouse_id_node_14, w_warehouse_name_node_14, w_warehouse_sq_ft_node_14, w_street_number_node_14, w_street_name_node_14, w_street_type_node_14, w_suite_number_node_14, w_city_node_14, w_county_node_14, w_state_node_14, w_zip_node_14, w_country_node_14, w_gmt_offset_node_14, w_gmt_offset_node_140], isBroadcast=[true], build=[right])
            :- Sort(orderBy=[i_manager_id ASC])
            :  +- Exchange(distribution=[single])
            :     +- AdaptiveJoin(originalJoin=[ShuffleHashJoin], joinType=[InnerJoin], where=[(cs_bill_addr_sk = i_item_sk)], select=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit, i_item_sk, i_item_id, i_rec_start_date, i_rec_end_date, i_item_desc, i_current_price, i_wholesale_cost, i_brand_id, i_brand, i_class_id, i_class, i_category_id, i_category, i_manufact_id, i_manufact, i_size, i_formulation, i_color, i_units, i_container, i_manager_id, i_product_name], build=[right])
            :        :- Exchange(distribution=[hash[cs_bill_addr_sk]])
            :        :  +- TableSourceScan(table=[[default_catalog, default_database, catalog_sales]], fields=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit])
            :        +- Exchange(distribution=[hash[i_item_sk]])
            :           +- TableSourceScan(table=[[default_catalog, default_database, item]], fields=[i_item_sk, i_item_id, i_rec_start_date, i_rec_end_date, i_item_desc, i_current_price, i_wholesale_cost, i_brand_id, i_brand, i_class_id, i_class, i_category_id, i_category, i_manufact_id, i_manufact, i_size, i_formulation, i_color, i_units, i_container, i_manager_id, i_product_name])
            +- Exchange(distribution=[broadcast])
               +- Calc(select=[ws_sold_date_sk AS ws_sold_date_sk_node_11, ws_sold_time_sk AS ws_sold_time_sk_node_11, ws_ship_date_sk AS ws_ship_date_sk_node_11, ws_item_sk AS ws_item_sk_node_11, ws_bill_customer_sk AS ws_bill_customer_sk_node_11, ws_bill_cdemo_sk AS ws_bill_cdemo_sk_node_11, ws_bill_hdemo_sk AS ws_bill_hdemo_sk_node_11, ws_bill_addr_sk AS ws_bill_addr_sk_node_11, ws_ship_customer_sk AS ws_ship_customer_sk_node_11, ws_ship_cdemo_sk AS ws_ship_cdemo_sk_node_11, ws_ship_hdemo_sk AS ws_ship_hdemo_sk_node_11, ws_ship_addr_sk AS ws_ship_addr_sk_node_11, ws_web_page_sk AS ws_web_page_sk_node_11, ws_web_site_sk AS ws_web_site_sk_node_11, ws_ship_mode_sk AS ws_ship_mode_sk_node_11, ws_warehouse_sk AS ws_warehouse_sk_node_11, ws_promo_sk AS ws_promo_sk_node_11, ws_order_number AS ws_order_number_node_11, ws_quantity AS ws_quantity_node_11, ws_wholesale_cost AS ws_wholesale_cost_node_11, ws_list_price AS ws_list_price_node_11, ws_sales_price AS ws_sales_price_node_11, ws_ext_discount_amt AS ws_ext_discount_amt_node_11, ws_ext_sales_price AS ws_ext_sales_price_node_11, ws_ext_wholesale_cost AS ws_ext_wholesale_cost_node_11, ws_ext_list_price AS ws_ext_list_price_node_11, ws_ext_tax AS ws_ext_tax_node_11, ws_coupon_amt AS ws_coupon_amt_node_11, ws_ext_ship_cost AS ws_ext_ship_cost_node_11, ws_net_paid AS ws_net_paid_node_11, ws_net_paid_inc_tax AS ws_net_paid_inc_tax_node_11, ws_net_paid_inc_ship AS ws_net_paid_inc_ship_node_11, ws_net_paid_inc_ship_tax AS ws_net_paid_inc_ship_tax_node_11, ws_net_profit AS ws_net_profit_node_11, ca_address_sk AS ca_address_sk_node_12, ca_address_id AS ca_address_id_node_12, ca_street_number AS ca_street_number_node_12, ca_street_name AS ca_street_name_node_12, ca_street_type AS ca_street_type_node_12, ca_suite_number AS ca_suite_number_node_12, ca_city AS ca_city_node_12, ca_county AS ca_county_node_12, ca_state AS ca_state_node_12, ca_zip AS ca_zip_node_12, ca_country AS ca_country_node_12, ca_gmt_offset AS ca_gmt_offset_node_12, ca_location_type AS ca_location_type_node_12, d_date_sk AS d_date_sk_node_13, d_date_id AS d_date_id_node_13, d_date AS d_date_node_13, d_month_seq AS d_month_seq_node_13, d_week_seq AS d_week_seq_node_13, d_quarter_seq AS d_quarter_seq_node_13, d_year AS d_year_node_13, d_dow AS d_dow_node_13, d_moy AS d_moy_node_13, d_dom AS d_dom_node_13, d_qoy AS d_qoy_node_13, d_fy_year AS d_fy_year_node_13, d_fy_quarter_seq AS d_fy_quarter_seq_node_13, d_fy_week_seq AS d_fy_week_seq_node_13, d_day_name AS d_day_name_node_13, d_quarter_name AS d_quarter_name_node_13, d_holiday AS d_holiday_node_13, d_weekend AS d_weekend_node_13, d_following_holiday AS d_following_holiday_node_13, d_first_dom AS d_first_dom_node_13, d_last_dom AS d_last_dom_node_13, d_same_day_ly AS d_same_day_ly_node_13, d_same_day_lq AS d_same_day_lq_node_13, d_current_day AS d_current_day_node_13, d_current_week AS d_current_week_node_13, d_current_month AS d_current_month_node_13, d_current_quarter AS d_current_quarter_node_13, d_current_year AS d_current_year_node_13, w_warehouse_sk AS w_warehouse_sk_node_14, w_warehouse_id AS w_warehouse_id_node_14, w_warehouse_name AS w_warehouse_name_node_14, w_warehouse_sq_ft AS w_warehouse_sq_ft_node_14, w_street_number AS w_street_number_node_14, w_street_name AS w_street_name_node_14, w_street_type AS w_street_type_node_14, w_suite_number AS w_suite_number_node_14, w_city AS w_city_node_14, w_county AS w_county_node_14, w_state AS w_state_node_14, w_zip AS w_zip_node_14, w_country AS w_country_node_14, w_gmt_offset AS w_gmt_offset_node_14, CAST(w_gmt_offset AS DECIMAL(7, 2)) AS w_gmt_offset_node_140])
                  +- Limit(offset=[0], fetch=[67], global=[true])
                     +- Exchange(distribution=[single])
                        +- Limit(offset=[0], fetch=[67], global=[false])
                           +- MultipleInput(readOrder=[0,1,0], members=[\
HashJoin(joinType=[InnerJoin], where=[(w_warehouse_sk = ca_address_sk)], select=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit, ca_address_sk, ca_address_id, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type, d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year, w_warehouse_sk, w_warehouse_id, w_warehouse_name, w_warehouse_sq_ft, w_street_number, w_street_name, w_street_type, w_suite_number, w_city, w_county, w_state, w_zip, w_country, w_gmt_offset], build=[right])\
:- HashJoin(joinType=[InnerJoin], where=[(ws_bill_hdemo_sk = ca_address_sk)], select=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit, ca_address_sk, ca_address_id, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type], build=[right])\
:  :- [#2] Exchange(distribution=[hash[ws_bill_hdemo_sk]])\
:  +- [#3] Exchange(distribution=[hash[ca_address_sk]])\
+- [#1] Exchange(distribution=[hash[w_warehouse_sk]])\
])
                              :- Exchange(distribution=[hash[w_warehouse_sk]])
                              :  +- MultipleInput(readOrder=[1,0], members=[\
NestedLoopJoin(joinType=[InnerJoin], where=[(d_quarter_seq = w_warehouse_sq_ft)], select=[d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year, w_warehouse_sk, w_warehouse_id, w_warehouse_name, w_warehouse_sq_ft, w_street_number, w_street_name, w_street_type, w_suite_number, w_city, w_county, w_state, w_zip, w_country, w_gmt_offset], build=[right])\
:- [#1] TableSourceScan(table=[[default_catalog, default_database, date_dim]], fields=[d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year])\
+- [#2] Exchange(distribution=[broadcast])\
])
                              :     :- TableSourceScan(table=[[default_catalog, default_database, date_dim]], fields=[d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year])
                              :     +- Exchange(distribution=[broadcast])
                              :        +- TableSourceScan(table=[[default_catalog, default_database, warehouse]], fields=[w_warehouse_sk, w_warehouse_id, w_warehouse_name, w_warehouse_sq_ft, w_street_number, w_street_name, w_street_type, w_suite_number, w_city, w_county, w_state, w_zip, w_country, w_gmt_offset])
                              :- Exchange(distribution=[hash[ws_bill_hdemo_sk]])
                              :  +- TableSourceScan(table=[[default_catalog, default_database, web_sales]], fields=[ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit])
                              +- Exchange(distribution=[hash[ca_address_sk]])
                                 +- TableSourceScan(table=[[default_catalog, default_database, customer_address]], fields=[ca_address_sk, ca_address_id, ca_street_number, ca_street_name, ca_street_type, ca_suite_number, ca_city, ca_county, ca_state, ca_zip, ca_country, ca_gmt_offset, ca_location_type])

",
      "stderr": ""
    },
    "unopt": {
      "success": false,
      "error_name": "RuntimeException",
      "error_message": "An error occurred while calling o126186176.explain.
: java.lang.RuntimeException: Error while applying rule FlinkExpandConversionRule, args [rel#254573573:AbstractConverter.BATCH_PHYSICAL.hash[0, 1]true.[54](input=RelSubset#254573571,convention=BATCH_PHYSICAL,FlinkRelDistributionTraitDef=hash[0, 1]true,sort=[54]), rel#254573570:BatchPhysicalLocalHashAggregate.BATCH_PHYSICAL.any.[54](input=RelSubset#254573569,groupBy=cs_ext_list_price, i_wholesale_cost,select=cs_ext_list_price, i_wholesale_cost, Partial_MAX(cs_wholesale_cost) AS max$0)]
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.onMatch(VolcanoRuleCall.java:250)
\tat org.apache.calcite.plan.volcano.IterativeRuleDriver.drive(IterativeRuleDriver.java:59)
\tat org.apache.calcite.plan.volcano.VolcanoPlanner.findBestExp(VolcanoPlanner.java:523)
\tat org.apache.calcite.tools.Programs$RuleSetProgram.run(Programs.java:317)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkVolcanoProgram.optimize(FlinkVolcanoProgram.scala:62)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkChainedProgram.$anonfun$optimize$1(FlinkChainedProgram.scala:59)
\tat scala.collection.TraversableOnce$folder$1.apply(TraversableOnce.scala:196)
\tat scala.collection.TraversableOnce$folder$1.apply(TraversableOnce.scala:194)
\tat scala.collection.Iterator.foreach(Iterator.scala:943)
\tat scala.collection.Iterator.foreach$(Iterator.scala:943)
\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
\tat scala.collection.IterableLike.foreach(IterableLike.scala:74)
\tat scala.collection.IterableLike.foreach$(IterableLike.scala:73)
\tat scala.collection.AbstractIterable.foreach(Iterable.scala:56)
\tat scala.collection.TraversableOnce.foldLeft(TraversableOnce.scala:199)
\tat scala.collection.TraversableOnce.foldLeft$(TraversableOnce.scala:192)
\tat scala.collection.AbstractTraversable.foldLeft(Traversable.scala:108)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkChainedProgram.optimize(FlinkChainedProgram.scala:55)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.optimizeTree(BatchCommonSubGraphBasedOptimizer.scala:93)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.optimizeBlock(BatchCommonSubGraphBasedOptimizer.scala:58)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.$anonfun$doOptimize$1(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.$anonfun$doOptimize$1$adapted(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat scala.collection.immutable.List.foreach(List.scala:431)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.doOptimize(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat org.apache.flink.table.planner.plan.optimize.CommonSubGraphBasedOptimizer.optimize(CommonSubGraphBasedOptimizer.scala:87)
\tat org.apache.flink.table.planner.delegation.PlannerBase.optimize(PlannerBase.scala:390)
\tat org.apache.flink.table.planner.delegation.PlannerBase.getExplainGraphs(PlannerBase.scala:625)
\tat org.apache.flink.table.planner.delegation.BatchPlanner.explain(BatchPlanner.scala:149)
\tat org.apache.flink.table.planner.delegation.BatchPlanner.explain(BatchPlanner.scala:49)
\tat org.apache.flink.table.api.internal.TableEnvironmentImpl.explainInternal(TableEnvironmentImpl.java:753)
\tat org.apache.flink.table.api.internal.TableImpl.explain(TableImpl.java:482)
\tat jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)
\tat org.apache.flink.api.python.shaded.py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
\tat org.apache.flink.api.python.shaded.py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
\tat org.apache.flink.api.python.shaded.py4j.Gateway.invoke(Gateway.java:282)
\tat org.apache.flink.api.python.shaded.py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
\tat org.apache.flink.api.python.shaded.py4j.commands.CallCommand.execute(CallCommand.java:79)
\tat org.apache.flink.api.python.shaded.py4j.GatewayConnection.run(GatewayConnection.java:238)
\tat java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.RuntimeException: Error occurred while applying rule FlinkExpandConversionRule
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.transformTo(VolcanoRuleCall.java:157)
\tat org.apache.calcite.plan.RelOptRuleCall.transformTo(RelOptRuleCall.java:273)
\tat org.apache.calcite.plan.RelOptRuleCall.transformTo(RelOptRuleCall.java:288)
\tat org.apache.flink.table.planner.plan.rules.physical.FlinkExpandConversionRule.satisfyTraitsBySelf(FlinkExpandConversionRule.scala:72)
\tat org.apache.flink.table.planner.plan.rules.physical.FlinkExpandConversionRule.onMatch(FlinkExpandConversionRule.scala:52)
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.onMatch(VolcanoRuleCall.java:223)
\t... 40 more
Caused by: java.lang.ArrayIndexOutOfBoundsException
",
      "stdout": "",
      "stderr": ""
    }
  }
}
"""



//Optimizer Branch Coverage: 0