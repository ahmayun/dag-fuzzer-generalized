# ======== Program ========
from pyflink.table import *
from pyflink.table.expressions import *
from pyflink.table.udf import udf
from pyflink.table.types import DataTypes

from pyflink.table.udf import AggregateFunction, udaf
from pyflink.table import DataTypes
import pandas as pd

class MyObject:
    def __init__(self, name, value):
        self.name = name
        self.value = value

# UDF that returns the custom object
@udf(result_type=DataTypes.ROW([
    DataTypes.FIELD("name", DataTypes.STRING()),
    DataTypes.FIELD("value", DataTypes.INT())
]))
def preloaded_udf_complex(*input_val):
    obj = MyObject("test", hash(input_val[0]))
    return (obj.name, obj.value)  # Return as tuple

@udf(result_type=DataTypes.BOOLEAN())
def preloaded_udf_boolean(input_val):
    return True


def preloaded_aggregation(values: pd.Series) -> float:
    return values.skew()


try:
    table_env.drop_temporary_function("preloaded_udf_agg")
except:
    pass

preloaded_udf_agg = udaf(preloaded_aggregation, result_type=DataTypes.BIGINT(), func_type="pandas")

table_env.create_temporary_function("preloaded_udf_agg", preloaded_udf_agg)

autonode_17 = table_env.from_path("reason").select(*[col(column_name).alias(f"{column_name}_node_17") for column_name in table_env.from_path("reason").get_schema().get_field_names()])
autonode_18 = table_env.from_path("web_returns").select(*[col(column_name).alias(f"{column_name}_node_18") for column_name in table_env.from_path("web_returns").get_schema().get_field_names()])
autonode_19 = table_env.from_path("household_demographics").select(*[col(column_name).alias(f"{column_name}_node_19") for column_name in table_env.from_path("household_demographics").get_schema().get_field_names()])
autonode_21 = table_env.from_path("catalog_sales").select(*[col(column_name).alias(f"{column_name}_node_21") for column_name in table_env.from_path("catalog_sales").get_schema().get_field_names()])
autonode_20 = table_env.from_path("store_sales").select(*[col(column_name).alias(f"{column_name}_node_20") for column_name in table_env.from_path("store_sales").get_schema().get_field_names()])
autonode_23 = table_env.from_path("web_site").select(*[col(column_name).alias(f"{column_name}_node_23") for column_name in table_env.from_path("web_site").get_schema().get_field_names()])
autonode_22 = table_env.from_path("catalog_returns").select(*[col(column_name).alias(f"{column_name}_node_22") for column_name in table_env.from_path("catalog_returns").get_schema().get_field_names()])
autonode_12 = autonode_17.limit(11)
autonode_13 = autonode_18.join(autonode_19, col('wr_returned_date_sk_node_18') == col('hd_dep_count_node_19'))
autonode_14 = autonode_20.add_columns(lit("hello"))
autonode_16 = autonode_23.distinct()
autonode_15 = autonode_21.join(autonode_22, col('cr_returning_hdemo_sk_node_22') == col('cs_ship_mode_sk_node_21'))
autonode_8 = autonode_12.join(autonode_13, col('hd_vehicle_count_node_19') == col('r_reason_sk_node_17'))
autonode_9 = autonode_14.group_by(col('ss_addr_sk_node_20')).select(call('preloaded_udf_agg', col('ss_ext_list_price_node_20')).alias('ss_ext_list_price_node_20'))
autonode_11 = autonode_16.order_by(col('web_country_node_23'))
autonode_10 = autonode_15.order_by(col('cr_call_center_sk_node_22'))
autonode_5 = autonode_8.distinct()
autonode_7 = autonode_11.alias('qex95')
autonode_6 = autonode_9.join(autonode_10, col('cs_ext_wholesale_cost_node_21') == col('ss_ext_list_price_node_20'))
autonode_3 = autonode_5.filter(col('wr_return_quantity_node_18') < 14)
autonode_4 = autonode_6.join(autonode_7, col('cs_ship_hdemo_sk_node_21') == col('web_mkt_id_node_23'))
autonode_1 = autonode_3.filter(col('wr_refunded_customer_sk_node_18') <= 1)
autonode_2 = autonode_4.group_by(col('cr_returning_customer_sk_node_22')).select(col('web_country_node_23').min.alias('web_country_node_23'))
sink = autonode_1.join(autonode_2, col('hd_buy_potential_node_19') == col('web_country_node_23'))
print(sink.explain())

# ======== Details ========
"""
{
  "is_same": false,
  "result_name": "MismatchException",
  "result_details": {
    "opt": {
      "success": true,
      "error_name": "",
      "error_message": "",
      "stdout": "== Abstract Syntax Tree ==
LogicalJoin(condition=[=($29, $32)], joinType=[inner])
:- LogicalFilter(condition=[<=($6, 1)])
:  +- LogicalFilter(condition=[<($17, 14)])
:     +- LogicalAggregate(group=[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}])
:        +- LogicalJoin(condition=[=($31, $0)], joinType=[inner])
:           :- LogicalSort(fetch=[11])
:           :  +- LogicalProject(r_reason_sk_node_17=[$0], r_reason_id_node_17=[$1], r_reason_desc_node_17=[$2])
:           :     +- LogicalTableScan(table=[[default_catalog, default_database, reason]])
:           +- LogicalJoin(condition=[=($0, $27)], joinType=[inner])
:              :- LogicalProject(wr_returned_date_sk_node_18=[$0], wr_returned_time_sk_node_18=[$1], wr_item_sk_node_18=[$2], wr_refunded_customer_sk_node_18=[$3], wr_refunded_cdemo_sk_node_18=[$4], wr_refunded_hdemo_sk_node_18=[$5], wr_refunded_addr_sk_node_18=[$6], wr_returning_customer_sk_node_18=[$7], wr_returning_cdemo_sk_node_18=[$8], wr_returning_hdemo_sk_node_18=[$9], wr_returning_addr_sk_node_18=[$10], wr_web_page_sk_node_18=[$11], wr_reason_sk_node_18=[$12], wr_order_number_node_18=[$13], wr_return_quantity_node_18=[$14], wr_return_amt_node_18=[$15], wr_return_tax_node_18=[$16], wr_return_amt_inc_tax_node_18=[$17], wr_fee_node_18=[$18], wr_return_ship_cost_node_18=[$19], wr_refunded_cash_node_18=[$20], wr_reversed_charge_node_18=[$21], wr_account_credit_node_18=[$22], wr_net_loss_node_18=[$23])
:              :  +- LogicalTableScan(table=[[default_catalog, default_database, web_returns]])
:              +- LogicalProject(hd_demo_sk_node_19=[$0], hd_income_band_sk_node_19=[$1], hd_buy_potential_node_19=[$2], hd_dep_count_node_19=[$3], hd_vehicle_count_node_19=[$4])
:                 +- LogicalTableScan(table=[[default_catalog, default_database, household_demographics]])
+- LogicalProject(web_country_node_23=[$1])
   +- LogicalAggregate(group=[{42}], EXPR$0=[MIN($85)])
      +- LogicalJoin(condition=[=($10, $71)], joinType=[inner])
         :- LogicalJoin(condition=[=($25, $0)], joinType=[inner])
         :  :- LogicalProject(ss_ext_list_price_node_20=[$1])
         :  :  +- LogicalAggregate(group=[{0}], EXPR$0=[preloaded_udf_agg($1)])
         :  :     +- LogicalProject(ss_addr_sk_node_20=[$6], ss_ext_list_price_node_20=[$17])
         :  :        +- LogicalTableScan(table=[[default_catalog, default_database, store_sales]])
         :  +- LogicalSort(sort0=[$45], dir0=[ASC])
         :     +- LogicalJoin(condition=[=($43, $13)], joinType=[inner])
         :        :- LogicalProject(cs_sold_date_sk_node_21=[$0], cs_sold_time_sk_node_21=[$1], cs_ship_date_sk_node_21=[$2], cs_bill_customer_sk_node_21=[$3], cs_bill_cdemo_sk_node_21=[$4], cs_bill_hdemo_sk_node_21=[$5], cs_bill_addr_sk_node_21=[$6], cs_ship_customer_sk_node_21=[$7], cs_ship_cdemo_sk_node_21=[$8], cs_ship_hdemo_sk_node_21=[$9], cs_ship_addr_sk_node_21=[$10], cs_call_center_sk_node_21=[$11], cs_catalog_page_sk_node_21=[$12], cs_ship_mode_sk_node_21=[$13], cs_warehouse_sk_node_21=[$14], cs_item_sk_node_21=[$15], cs_promo_sk_node_21=[$16], cs_order_number_node_21=[$17], cs_quantity_node_21=[$18], cs_wholesale_cost_node_21=[$19], cs_list_price_node_21=[$20], cs_sales_price_node_21=[$21], cs_ext_discount_amt_node_21=[$22], cs_ext_sales_price_node_21=[$23], cs_ext_wholesale_cost_node_21=[$24], cs_ext_list_price_node_21=[$25], cs_ext_tax_node_21=[$26], cs_coupon_amt_node_21=[$27], cs_ext_ship_cost_node_21=[$28], cs_net_paid_node_21=[$29], cs_net_paid_inc_tax_node_21=[$30], cs_net_paid_inc_ship_node_21=[$31], cs_net_paid_inc_ship_tax_node_21=[$32], cs_net_profit_node_21=[$33])
         :        :  +- LogicalTableScan(table=[[default_catalog, default_database, catalog_sales]])
         :        +- LogicalProject(cr_returned_date_sk_node_22=[$0], cr_returned_time_sk_node_22=[$1], cr_item_sk_node_22=[$2], cr_refunded_customer_sk_node_22=[$3], cr_refunded_cdemo_sk_node_22=[$4], cr_refunded_hdemo_sk_node_22=[$5], cr_refunded_addr_sk_node_22=[$6], cr_returning_customer_sk_node_22=[$7], cr_returning_cdemo_sk_node_22=[$8], cr_returning_hdemo_sk_node_22=[$9], cr_returning_addr_sk_node_22=[$10], cr_call_center_sk_node_22=[$11], cr_catalog_page_sk_node_22=[$12], cr_ship_mode_sk_node_22=[$13], cr_warehouse_sk_node_22=[$14], cr_reason_sk_node_22=[$15], cr_order_number_node_22=[$16], cr_return_quantity_node_22=[$17], cr_return_amount_node_22=[$18], cr_return_tax_node_22=[$19], cr_return_amt_inc_tax_node_22=[$20], cr_fee_node_22=[$21], cr_return_ship_cost_node_22=[$22], cr_refunded_cash_node_22=[$23], cr_reversed_charge_node_22=[$24], cr_store_credit_node_22=[$25], cr_net_loss_node_22=[$26])
         :           +- LogicalTableScan(table=[[default_catalog, default_database, catalog_returns]])
         +- LogicalProject(qex95=[AS($0, _UTF-16LE'qex95')], web_site_id_node_23=[$1], web_rec_start_date_node_23=[$2], web_rec_end_date_node_23=[$3], web_name_node_23=[$4], web_open_date_sk_node_23=[$5], web_close_date_sk_node_23=[$6], web_class_node_23=[$7], web_manager_node_23=[$8], web_mkt_id_node_23=[$9], web_mkt_class_node_23=[$10], web_mkt_desc_node_23=[$11], web_market_manager_node_23=[$12], web_company_id_node_23=[$13], web_company_name_node_23=[$14], web_street_number_node_23=[$15], web_street_name_node_23=[$16], web_street_type_node_23=[$17], web_suite_number_node_23=[$18], web_city_node_23=[$19], web_county_node_23=[$20], web_state_node_23=[$21], web_zip_node_23=[$22], web_country_node_23=[$23], web_gmt_offset_node_23=[$24], web_tax_percentage_node_23=[$25])
            +- LogicalSort(sort0=[$23], dir0=[ASC])
               +- LogicalAggregate(group=[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}])
                  +- LogicalProject(web_site_sk_node_23=[$0], web_site_id_node_23=[$1], web_rec_start_date_node_23=[$2], web_rec_end_date_node_23=[$3], web_name_node_23=[$4], web_open_date_sk_node_23=[$5], web_close_date_sk_node_23=[$6], web_class_node_23=[$7], web_manager_node_23=[$8], web_mkt_id_node_23=[$9], web_mkt_class_node_23=[$10], web_mkt_desc_node_23=[$11], web_market_manager_node_23=[$12], web_company_id_node_23=[$13], web_company_name_node_23=[$14], web_street_number_node_23=[$15], web_street_name_node_23=[$16], web_street_type_node_23=[$17], web_suite_number_node_23=[$18], web_city_node_23=[$19], web_county_node_23=[$20], web_state_node_23=[$21], web_zip_node_23=[$22], web_country_node_23=[$23], web_gmt_offset_node_23=[$24], web_tax_percentage_node_23=[$25])
                     +- LogicalTableScan(table=[[default_catalog, default_database, web_site]])

== Optimized Physical Plan ==
HashJoin(joinType=[InnerJoin], where=[=(hd_buy_potential, web_country_node_23)], select=[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count, web_country_node_23], isBroadcast=[true], build=[right])
:- HashAggregate(isMerge=[false], groupBy=[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count], select=[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count])
:  +- Exchange(distribution=[hash[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count]])
:     +- HashJoin(joinType=[InnerJoin], where=[=(hd_vehicle_count, r_reason_sk)], select=[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count], isBroadcast=[true], build=[left])
:        :- Exchange(distribution=[broadcast])
:        :  +- Limit(offset=[0], fetch=[11], global=[true])
:        :     +- Exchange(distribution=[single])
:        :        +- Limit(offset=[0], fetch=[11], global=[false])
:        :           +- TableSourceScan(table=[[default_catalog, default_database, reason, limit=[11]]], fields=[r_reason_sk, r_reason_id, r_reason_desc])
:        +- HashJoin(joinType=[InnerJoin], where=[=(wr_returned_date_sk, hd_dep_count)], select=[wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count], isBroadcast=[true], build=[right])
:           :- Calc(select=[wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss], where=[AND(<(wr_return_quantity, 14), <=(wr_refunded_customer_sk, 1))])
:           :  +- TableSourceScan(table=[[default_catalog, default_database, web_returns, filter=[and(<(wr_return_quantity, 14), <=(wr_refunded_customer_sk, 1))]]], fields=[wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss])
:           +- Exchange(distribution=[broadcast])
:              +- TableSourceScan(table=[[default_catalog, default_database, household_demographics]], fields=[hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count])
+- Exchange(distribution=[broadcast])
   +- Calc(select=[EXPR$0 AS web_country_node_23])
      +- SortAggregate(isMerge=[false], groupBy=[cr_returning_customer_sk_node_22], select=[cr_returning_customer_sk_node_22, MIN(web_country_node_23) AS EXPR$0])
         +- Sort(orderBy=[cr_returning_customer_sk_node_22 ASC])
            +- Exchange(distribution=[hash[cr_returning_customer_sk_node_22]])
               +- HashJoin(joinType=[InnerJoin], where=[=(cs_ship_hdemo_sk_node_21, web_mkt_id_node_23)], select=[ss_ext_list_price_node_20, cs_sold_date_sk_node_21, cs_sold_time_sk_node_21, cs_ship_date_sk_node_21, cs_bill_customer_sk_node_21, cs_bill_cdemo_sk_node_21, cs_bill_hdemo_sk_node_21, cs_bill_addr_sk_node_21, cs_ship_customer_sk_node_21, cs_ship_cdemo_sk_node_21, cs_ship_hdemo_sk_node_21, cs_ship_addr_sk_node_21, cs_call_center_sk_node_21, cs_catalog_page_sk_node_21, cs_ship_mode_sk_node_21, cs_warehouse_sk_node_21, cs_item_sk_node_21, cs_promo_sk_node_21, cs_order_number_node_21, cs_quantity_node_21, cs_wholesale_cost_node_21, cs_list_price_node_21, cs_sales_price_node_21, cs_ext_discount_amt_node_21, cs_ext_sales_price_node_21, cs_ext_wholesale_cost_node_21, cs_ext_list_price_node_21, cs_ext_tax_node_21, cs_coupon_amt_node_21, cs_ext_ship_cost_node_21, cs_net_paid_node_21, cs_net_paid_inc_tax_node_21, cs_net_paid_inc_ship_node_21, cs_net_paid_inc_ship_tax_node_21, cs_net_profit_node_21, cr_returned_date_sk_node_22, cr_returned_time_sk_node_22, cr_item_sk_node_22, cr_refunded_customer_sk_node_22, cr_refunded_cdemo_sk_node_22, cr_refunded_hdemo_sk_node_22, cr_refunded_addr_sk_node_22, cr_returning_customer_sk_node_22, cr_returning_cdemo_sk_node_22, cr_returning_hdemo_sk_node_22, cr_returning_addr_sk_node_22, cr_call_center_sk_node_22, cr_catalog_page_sk_node_22, cr_ship_mode_sk_node_22, cr_warehouse_sk_node_22, cr_reason_sk_node_22, cr_order_number_node_22, cr_return_quantity_node_22, cr_return_amount_node_22, cr_return_tax_node_22, cr_return_amt_inc_tax_node_22, cr_fee_node_22, cr_return_ship_cost_node_22, cr_refunded_cash_node_22, cr_reversed_charge_node_22, cr_store_credit_node_22, cr_net_loss_node_22, qex95, web_site_id_node_23, web_rec_start_date_node_23, web_rec_end_date_node_23, web_name_node_23, web_open_date_sk_node_23, web_close_date_sk_node_23, web_class_node_23, web_manager_node_23, web_mkt_id_node_23, web_mkt_class_node_23, web_mkt_desc_node_23, web_market_manager_node_23, web_company_id_node_23, web_company_name_node_23, web_street_number_node_23, web_street_name_node_23, web_street_type_node_23, web_suite_number_node_23, web_city_node_23, web_county_node_23, web_state_node_23, web_zip_node_23, web_country_node_23, web_gmt_offset_node_23, web_tax_percentage_node_23], isBroadcast=[true], build=[right])
                  :- Calc(select=[ss_ext_list_price_node_20, cs_sold_date_sk_node_21, cs_sold_time_sk_node_21, cs_ship_date_sk_node_21, cs_bill_customer_sk_node_21, cs_bill_cdemo_sk_node_21, cs_bill_hdemo_sk_node_21, cs_bill_addr_sk_node_21, cs_ship_customer_sk_node_21, cs_ship_cdemo_sk_node_21, cs_ship_hdemo_sk_node_21, cs_ship_addr_sk_node_21, cs_call_center_sk_node_21, cs_catalog_page_sk_node_21, cs_ship_mode_sk_node_21, cs_warehouse_sk_node_21, cs_item_sk_node_21, cs_promo_sk_node_21, cs_order_number_node_21, cs_quantity_node_21, cs_wholesale_cost_node_21, cs_list_price_node_21, cs_sales_price_node_21, cs_ext_discount_amt_node_21, cs_ext_sales_price_node_21, cs_ext_wholesale_cost_node_21, cs_ext_list_price_node_21, cs_ext_tax_node_21, cs_coupon_amt_node_21, cs_ext_ship_cost_node_21, cs_net_paid_node_21, cs_net_paid_inc_tax_node_21, cs_net_paid_inc_ship_node_21, cs_net_paid_inc_ship_tax_node_21, cs_net_profit_node_21, cr_returned_date_sk_node_22, cr_returned_time_sk_node_22, cr_item_sk_node_22, cr_refunded_customer_sk_node_22, cr_refunded_cdemo_sk_node_22, cr_refunded_hdemo_sk_node_22, cr_refunded_addr_sk_node_22, cr_returning_customer_sk_node_22, cr_returning_cdemo_sk_node_22, cr_returning_hdemo_sk_node_22, cr_returning_addr_sk_node_22, cr_call_center_sk_node_22, cr_catalog_page_sk_node_22, cr_ship_mode_sk_node_22, cr_warehouse_sk_node_22, cr_reason_sk_node_22, cr_order_number_node_22, cr_return_quantity_node_22, cr_return_amount_node_22, cr_return_tax_node_22, cr_return_amt_inc_tax_node_22, cr_fee_node_22, cr_return_ship_cost_node_22, cr_refunded_cash_node_22, cr_reversed_charge_node_22, cr_store_credit_node_22, cr_net_loss_node_22])
                  :  +- HashJoin(joinType=[InnerJoin], where=[=(cs_ext_wholesale_cost_node_210, ss_ext_list_price_node_200)], select=[ss_ext_list_price_node_20, ss_ext_list_price_node_200, cs_sold_date_sk_node_21, cs_sold_time_sk_node_21, cs_ship_date_sk_node_21, cs_bill_customer_sk_node_21, cs_bill_cdemo_sk_node_21, cs_bill_hdemo_sk_node_21, cs_bill_addr_sk_node_21, cs_ship_customer_sk_node_21, cs_ship_cdemo_sk_node_21, cs_ship_hdemo_sk_node_21, cs_ship_addr_sk_node_21, cs_call_center_sk_node_21, cs_catalog_page_sk_node_21, cs_ship_mode_sk_node_21, cs_warehouse_sk_node_21, cs_item_sk_node_21, cs_promo_sk_node_21, cs_order_number_node_21, cs_quantity_node_21, cs_wholesale_cost_node_21, cs_list_price_node_21, cs_sales_price_node_21, cs_ext_discount_amt_node_21, cs_ext_sales_price_node_21, cs_ext_wholesale_cost_node_21, cs_ext_list_price_node_21, cs_ext_tax_node_21, cs_coupon_amt_node_21, cs_ext_ship_cost_node_21, cs_net_paid_node_21, cs_net_paid_inc_tax_node_21, cs_net_paid_inc_ship_node_21, cs_net_paid_inc_ship_tax_node_21, cs_net_profit_node_21, cr_returned_date_sk_node_22, cr_returned_time_sk_node_22, cr_item_sk_node_22, cr_refunded_customer_sk_node_22, cr_refunded_cdemo_sk_node_22, cr_refunded_hdemo_sk_node_22, cr_refunded_addr_sk_node_22, cr_returning_customer_sk_node_22, cr_returning_cdemo_sk_node_22, cr_returning_hdemo_sk_node_22, cr_returning_addr_sk_node_22, cr_call_center_sk_node_22, cr_catalog_page_sk_node_22, cr_ship_mode_sk_node_22, cr_warehouse_sk_node_22, cr_reason_sk_node_22, cr_order_number_node_22, cr_return_quantity_node_22, cr_return_amount_node_22, cr_return_tax_node_22, cr_return_amt_inc_tax_node_22, cr_fee_node_22, cr_return_ship_cost_node_22, cr_refunded_cash_node_22, cr_reversed_charge_node_22, cr_store_credit_node_22, cr_net_loss_node_22, cs_ext_wholesale_cost_node_210], build=[left])
                  :     :- Exchange(distribution=[hash[ss_ext_list_price_node_200]])
                  :     :  +- Calc(select=[EXPR$0 AS ss_ext_list_price_node_20, CAST(EXPR$0 AS DECIMAL(21, 2)) AS ss_ext_list_price_node_200])
                  :     :     +- PythonGroupAggregate(groupBy=[ss_addr_sk], select=[ss_addr_sk, preloaded_udf_agg(ss_ext_list_price) AS EXPR$0])
                  :     :        +- Sort(orderBy=[ss_addr_sk ASC])
                  :     :           +- Exchange(distribution=[hash[ss_addr_sk]])
                  :     :              +- TableSourceScan(table=[[default_catalog, default_database, store_sales, project=[ss_addr_sk, ss_ext_list_price], metadata=[]]], fields=[ss_addr_sk, ss_ext_list_price])
                  :     +- Exchange(distribution=[hash[cs_ext_wholesale_cost_node_210]])
                  :        +- Calc(select=[cs_sold_date_sk AS cs_sold_date_sk_node_21, cs_sold_time_sk AS cs_sold_time_sk_node_21, cs_ship_date_sk AS cs_ship_date_sk_node_21, cs_bill_customer_sk AS cs_bill_customer_sk_node_21, cs_bill_cdemo_sk AS cs_bill_cdemo_sk_node_21, cs_bill_hdemo_sk AS cs_bill_hdemo_sk_node_21, cs_bill_addr_sk AS cs_bill_addr_sk_node_21, cs_ship_customer_sk AS cs_ship_customer_sk_node_21, cs_ship_cdemo_sk AS cs_ship_cdemo_sk_node_21, cs_ship_hdemo_sk AS cs_ship_hdemo_sk_node_21, cs_ship_addr_sk AS cs_ship_addr_sk_node_21, cs_call_center_sk AS cs_call_center_sk_node_21, cs_catalog_page_sk AS cs_catalog_page_sk_node_21, cs_ship_mode_sk AS cs_ship_mode_sk_node_21, cs_warehouse_sk AS cs_warehouse_sk_node_21, cs_item_sk AS cs_item_sk_node_21, cs_promo_sk AS cs_promo_sk_node_21, cs_order_number AS cs_order_number_node_21, cs_quantity AS cs_quantity_node_21, cs_wholesale_cost AS cs_wholesale_cost_node_21, cs_list_price AS cs_list_price_node_21, cs_sales_price AS cs_sales_price_node_21, cs_ext_discount_amt AS cs_ext_discount_amt_node_21, cs_ext_sales_price AS cs_ext_sales_price_node_21, cs_ext_wholesale_cost AS cs_ext_wholesale_cost_node_21, cs_ext_list_price AS cs_ext_list_price_node_21, cs_ext_tax AS cs_ext_tax_node_21, cs_coupon_amt AS cs_coupon_amt_node_21, cs_ext_ship_cost AS cs_ext_ship_cost_node_21, cs_net_paid AS cs_net_paid_node_21, cs_net_paid_inc_tax AS cs_net_paid_inc_tax_node_21, cs_net_paid_inc_ship AS cs_net_paid_inc_ship_node_21, cs_net_paid_inc_ship_tax AS cs_net_paid_inc_ship_tax_node_21, cs_net_profit AS cs_net_profit_node_21, cr_returned_date_sk AS cr_returned_date_sk_node_22, cr_returned_time_sk AS cr_returned_time_sk_node_22, cr_item_sk AS cr_item_sk_node_22, cr_refunded_customer_sk AS cr_refunded_customer_sk_node_22, cr_refunded_cdemo_sk AS cr_refunded_cdemo_sk_node_22, cr_refunded_hdemo_sk AS cr_refunded_hdemo_sk_node_22, cr_refunded_addr_sk AS cr_refunded_addr_sk_node_22, cr_returning_customer_sk AS cr_returning_customer_sk_node_22, cr_returning_cdemo_sk AS cr_returning_cdemo_sk_node_22, cr_returning_hdemo_sk AS cr_returning_hdemo_sk_node_22, cr_returning_addr_sk AS cr_returning_addr_sk_node_22, cr_call_center_sk AS cr_call_center_sk_node_22, cr_catalog_page_sk AS cr_catalog_page_sk_node_22, cr_ship_mode_sk AS cr_ship_mode_sk_node_22, cr_warehouse_sk AS cr_warehouse_sk_node_22, cr_reason_sk AS cr_reason_sk_node_22, cr_order_number AS cr_order_number_node_22, cr_return_quantity AS cr_return_quantity_node_22, cr_return_amount AS cr_return_amount_node_22, cr_return_tax AS cr_return_tax_node_22, cr_return_amt_inc_tax AS cr_return_amt_inc_tax_node_22, cr_fee AS cr_fee_node_22, cr_return_ship_cost AS cr_return_ship_cost_node_22, cr_refunded_cash AS cr_refunded_cash_node_22, cr_reversed_charge AS cr_reversed_charge_node_22, cr_store_credit AS cr_store_credit_node_22, cr_net_loss AS cr_net_loss_node_22, CAST(cs_ext_wholesale_cost AS DECIMAL(21, 2)) AS cs_ext_wholesale_cost_node_210])
                  :           +- Sort(orderBy=[cr_call_center_sk ASC])
                  :              +- Exchange(distribution=[single])
                  :                 +- HashJoin(joinType=[InnerJoin], where=[=(cr_returning_hdemo_sk, cs_ship_mode_sk)], select=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit, cr_returned_date_sk, cr_returned_time_sk, cr_item_sk, cr_refunded_customer_sk, cr_refunded_cdemo_sk, cr_refunded_hdemo_sk, cr_refunded_addr_sk, cr_returning_customer_sk, cr_returning_cdemo_sk, cr_returning_hdemo_sk, cr_returning_addr_sk, cr_call_center_sk, cr_catalog_page_sk, cr_ship_mode_sk, cr_warehouse_sk, cr_reason_sk, cr_order_number, cr_return_quantity, cr_return_amount, cr_return_tax, cr_return_amt_inc_tax, cr_fee, cr_return_ship_cost, cr_refunded_cash, cr_reversed_charge, cr_store_credit, cr_net_loss], build=[right])
                  :                    :- Exchange(distribution=[hash[cs_ship_mode_sk]])
                  :                    :  +- TableSourceScan(table=[[default_catalog, default_database, catalog_sales]], fields=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit])
                  :                    +- Exchange(distribution=[hash[cr_returning_hdemo_sk]])
                  :                       +- TableSourceScan(table=[[default_catalog, default_database, catalog_returns]], fields=[cr_returned_date_sk, cr_returned_time_sk, cr_item_sk, cr_refunded_customer_sk, cr_refunded_cdemo_sk, cr_refunded_hdemo_sk, cr_refunded_addr_sk, cr_returning_customer_sk, cr_returning_cdemo_sk, cr_returning_hdemo_sk, cr_returning_addr_sk, cr_call_center_sk, cr_catalog_page_sk, cr_ship_mode_sk, cr_warehouse_sk, cr_reason_sk, cr_order_number, cr_return_quantity, cr_return_amount, cr_return_tax, cr_return_amt_inc_tax, cr_fee, cr_return_ship_cost, cr_refunded_cash, cr_reversed_charge, cr_store_credit, cr_net_loss])
                  +- Exchange(distribution=[broadcast])
                     +- Calc(select=[web_site_sk AS qex95, web_site_id AS web_site_id_node_23, web_rec_start_date AS web_rec_start_date_node_23, web_rec_end_date AS web_rec_end_date_node_23, web_name AS web_name_node_23, web_open_date_sk AS web_open_date_sk_node_23, web_close_date_sk AS web_close_date_sk_node_23, web_class AS web_class_node_23, web_manager AS web_manager_node_23, web_mkt_id AS web_mkt_id_node_23, web_mkt_class AS web_mkt_class_node_23, web_mkt_desc AS web_mkt_desc_node_23, web_market_manager AS web_market_manager_node_23, web_company_id AS web_company_id_node_23, web_company_name AS web_company_name_node_23, web_street_number AS web_street_number_node_23, web_street_name AS web_street_name_node_23, web_street_type AS web_street_type_node_23, web_suite_number AS web_suite_number_node_23, web_city AS web_city_node_23, web_county AS web_county_node_23, web_state AS web_state_node_23, web_zip AS web_zip_node_23, web_country AS web_country_node_23, web_gmt_offset AS web_gmt_offset_node_23, web_tax_percentage AS web_tax_percentage_node_23])
                        +- Sort(orderBy=[web_country ASC])
                           +- Exchange(distribution=[single])
                              +- HashAggregate(isMerge=[false], groupBy=[web_site_sk, web_site_id, web_rec_start_date, web_rec_end_date, web_name, web_open_date_sk, web_close_date_sk, web_class, web_manager, web_mkt_id, web_mkt_class, web_mkt_desc, web_market_manager, web_company_id, web_company_name, web_street_number, web_street_name, web_street_type, web_suite_number, web_city, web_county, web_state, web_zip, web_country, web_gmt_offset, web_tax_percentage], select=[web_site_sk, web_site_id, web_rec_start_date, web_rec_end_date, web_name, web_open_date_sk, web_close_date_sk, web_class, web_manager, web_mkt_id, web_mkt_class, web_mkt_desc, web_market_manager, web_company_id, web_company_name, web_street_number, web_street_name, web_street_type, web_suite_number, web_city, web_county, web_state, web_zip, web_country, web_gmt_offset, web_tax_percentage])
                                 +- Exchange(distribution=[hash[web_site_sk, web_site_id, web_rec_start_date, web_rec_end_date, web_name, web_open_date_sk, web_close_date_sk, web_class, web_manager, web_mkt_id, web_mkt_class, web_mkt_desc, web_market_manager, web_company_id, web_company_name, web_street_number, web_street_name, web_street_type, web_suite_number, web_city, web_county, web_state, web_zip, web_country, web_gmt_offset, web_tax_percentage]])
                                    +- TableSourceScan(table=[[default_catalog, default_database, web_site]], fields=[web_site_sk, web_site_id, web_rec_start_date, web_rec_end_date, web_name, web_open_date_sk, web_close_date_sk, web_class, web_manager, web_mkt_id, web_mkt_class, web_mkt_desc, web_market_manager, web_company_id, web_company_name, web_street_number, web_street_name, web_street_type, web_suite_number, web_city, web_county, web_state, web_zip, web_country, web_gmt_offset, web_tax_percentage])

== Optimized Execution Plan ==
MultipleInput(readOrder=[0,1], members=[\
HashJoin(joinType=[InnerJoin], where=[(hd_buy_potential = web_country_node_23)], select=[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count, web_country_node_23], isBroadcast=[true], build=[right])\
:- HashAggregate(isMerge=[false], groupBy=[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count], select=[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count])\
:  +- [#2] Exchange(distribution=[hash[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count]])\
+- [#1] Exchange(distribution=[broadcast])\
])
:- Exchange(distribution=[broadcast])
:  +- Calc(select=[EXPR$0 AS web_country_node_23])
:     +- SortAggregate(isMerge=[false], groupBy=[cr_returning_customer_sk_node_22], select=[cr_returning_customer_sk_node_22, MIN(web_country_node_23) AS EXPR$0])
:        +- Exchange(distribution=[forward])
:           +- Sort(orderBy=[cr_returning_customer_sk_node_22 ASC])
:              +- Exchange(distribution=[hash[cr_returning_customer_sk_node_22]])
:                 +- MultipleInput(readOrder=[0,0,1], members=[\
HashJoin(joinType=[InnerJoin], where=[(cs_ship_hdemo_sk_node_21 = web_mkt_id_node_23)], select=[ss_ext_list_price_node_20, cs_sold_date_sk_node_21, cs_sold_time_sk_node_21, cs_ship_date_sk_node_21, cs_bill_customer_sk_node_21, cs_bill_cdemo_sk_node_21, cs_bill_hdemo_sk_node_21, cs_bill_addr_sk_node_21, cs_ship_customer_sk_node_21, cs_ship_cdemo_sk_node_21, cs_ship_hdemo_sk_node_21, cs_ship_addr_sk_node_21, cs_call_center_sk_node_21, cs_catalog_page_sk_node_21, cs_ship_mode_sk_node_21, cs_warehouse_sk_node_21, cs_item_sk_node_21, cs_promo_sk_node_21, cs_order_number_node_21, cs_quantity_node_21, cs_wholesale_cost_node_21, cs_list_price_node_21, cs_sales_price_node_21, cs_ext_discount_amt_node_21, cs_ext_sales_price_node_21, cs_ext_wholesale_cost_node_21, cs_ext_list_price_node_21, cs_ext_tax_node_21, cs_coupon_amt_node_21, cs_ext_ship_cost_node_21, cs_net_paid_node_21, cs_net_paid_inc_tax_node_21, cs_net_paid_inc_ship_node_21, cs_net_paid_inc_ship_tax_node_21, cs_net_profit_node_21, cr_returned_date_sk_node_22, cr_returned_time_sk_node_22, cr_item_sk_node_22, cr_refunded_customer_sk_node_22, cr_refunded_cdemo_sk_node_22, cr_refunded_hdemo_sk_node_22, cr_refunded_addr_sk_node_22, cr_returning_customer_sk_node_22, cr_returning_cdemo_sk_node_22, cr_returning_hdemo_sk_node_22, cr_returning_addr_sk_node_22, cr_call_center_sk_node_22, cr_catalog_page_sk_node_22, cr_ship_mode_sk_node_22, cr_warehouse_sk_node_22, cr_reason_sk_node_22, cr_order_number_node_22, cr_return_quantity_node_22, cr_return_amount_node_22, cr_return_tax_node_22, cr_return_amt_inc_tax_node_22, cr_fee_node_22, cr_return_ship_cost_node_22, cr_refunded_cash_node_22, cr_reversed_charge_node_22, cr_store_credit_node_22, cr_net_loss_node_22, qex95, web_site_id_node_23, web_rec_start_date_node_23, web_rec_end_date_node_23, web_name_node_23, web_open_date_sk_node_23, web_close_date_sk_node_23, web_class_node_23, web_manager_node_23, web_mkt_id_node_23, web_mkt_class_node_23, web_mkt_desc_node_23, web_market_manager_node_23, web_company_id_node_23, web_company_name_node_23, web_street_number_node_23, web_street_name_node_23, web_street_type_node_23, web_suite_number_node_23, web_city_node_23, web_county_node_23, web_state_node_23, web_zip_node_23, web_country_node_23, web_gmt_offset_node_23, web_tax_percentage_node_23], isBroadcast=[true], build=[right])\
:- Calc(select=[ss_ext_list_price_node_20, cs_sold_date_sk_node_21, cs_sold_time_sk_node_21, cs_ship_date_sk_node_21, cs_bill_customer_sk_node_21, cs_bill_cdemo_sk_node_21, cs_bill_hdemo_sk_node_21, cs_bill_addr_sk_node_21, cs_ship_customer_sk_node_21, cs_ship_cdemo_sk_node_21, cs_ship_hdemo_sk_node_21, cs_ship_addr_sk_node_21, cs_call_center_sk_node_21, cs_catalog_page_sk_node_21, cs_ship_mode_sk_node_21, cs_warehouse_sk_node_21, cs_item_sk_node_21, cs_promo_sk_node_21, cs_order_number_node_21, cs_quantity_node_21, cs_wholesale_cost_node_21, cs_list_price_node_21, cs_sales_price_node_21, cs_ext_discount_amt_node_21, cs_ext_sales_price_node_21, cs_ext_wholesale_cost_node_21, cs_ext_list_price_node_21, cs_ext_tax_node_21, cs_coupon_amt_node_21, cs_ext_ship_cost_node_21, cs_net_paid_node_21, cs_net_paid_inc_tax_node_21, cs_net_paid_inc_ship_node_21, cs_net_paid_inc_ship_tax_node_21, cs_net_profit_node_21, cr_returned_date_sk_node_22, cr_returned_time_sk_node_22, cr_item_sk_node_22, cr_refunded_customer_sk_node_22, cr_refunded_cdemo_sk_node_22, cr_refunded_hdemo_sk_node_22, cr_refunded_addr_sk_node_22, cr_returning_customer_sk_node_22, cr_returning_cdemo_sk_node_22, cr_returning_hdemo_sk_node_22, cr_returning_addr_sk_node_22, cr_call_center_sk_node_22, cr_catalog_page_sk_node_22, cr_ship_mode_sk_node_22, cr_warehouse_sk_node_22, cr_reason_sk_node_22, cr_order_number_node_22, cr_return_quantity_node_22, cr_return_amount_node_22, cr_return_tax_node_22, cr_return_amt_inc_tax_node_22, cr_fee_node_22, cr_return_ship_cost_node_22, cr_refunded_cash_node_22, cr_reversed_charge_node_22, cr_store_credit_node_22, cr_net_loss_node_22])\
:  +- HashJoin(joinType=[InnerJoin], where=[(cs_ext_wholesale_cost_node_210 = ss_ext_list_price_node_200)], select=[ss_ext_list_price_node_20, ss_ext_list_price_node_200, cs_sold_date_sk_node_21, cs_sold_time_sk_node_21, cs_ship_date_sk_node_21, cs_bill_customer_sk_node_21, cs_bill_cdemo_sk_node_21, cs_bill_hdemo_sk_node_21, cs_bill_addr_sk_node_21, cs_ship_customer_sk_node_21, cs_ship_cdemo_sk_node_21, cs_ship_hdemo_sk_node_21, cs_ship_addr_sk_node_21, cs_call_center_sk_node_21, cs_catalog_page_sk_node_21, cs_ship_mode_sk_node_21, cs_warehouse_sk_node_21, cs_item_sk_node_21, cs_promo_sk_node_21, cs_order_number_node_21, cs_quantity_node_21, cs_wholesale_cost_node_21, cs_list_price_node_21, cs_sales_price_node_21, cs_ext_discount_amt_node_21, cs_ext_sales_price_node_21, cs_ext_wholesale_cost_node_21, cs_ext_list_price_node_21, cs_ext_tax_node_21, cs_coupon_amt_node_21, cs_ext_ship_cost_node_21, cs_net_paid_node_21, cs_net_paid_inc_tax_node_21, cs_net_paid_inc_ship_node_21, cs_net_paid_inc_ship_tax_node_21, cs_net_profit_node_21, cr_returned_date_sk_node_22, cr_returned_time_sk_node_22, cr_item_sk_node_22, cr_refunded_customer_sk_node_22, cr_refunded_cdemo_sk_node_22, cr_refunded_hdemo_sk_node_22, cr_refunded_addr_sk_node_22, cr_returning_customer_sk_node_22, cr_returning_cdemo_sk_node_22, cr_returning_hdemo_sk_node_22, cr_returning_addr_sk_node_22, cr_call_center_sk_node_22, cr_catalog_page_sk_node_22, cr_ship_mode_sk_node_22, cr_warehouse_sk_node_22, cr_reason_sk_node_22, cr_order_number_node_22, cr_return_quantity_node_22, cr_return_amount_node_22, cr_return_tax_node_22, cr_return_amt_inc_tax_node_22, cr_fee_node_22, cr_return_ship_cost_node_22, cr_refunded_cash_node_22, cr_reversed_charge_node_22, cr_store_credit_node_22, cr_net_loss_node_22, cs_ext_wholesale_cost_node_210], build=[left])\
:     :- [#2] Exchange(distribution=[hash[ss_ext_list_price_node_200]])\
:     +- [#3] Exchange(distribution=[hash[cs_ext_wholesale_cost_node_210]])\
+- [#1] Exchange(distribution=[broadcast])\
])
:                    :- Exchange(distribution=[broadcast])
:                    :  +- Calc(select=[web_site_sk AS qex95, web_site_id AS web_site_id_node_23, web_rec_start_date AS web_rec_start_date_node_23, web_rec_end_date AS web_rec_end_date_node_23, web_name AS web_name_node_23, web_open_date_sk AS web_open_date_sk_node_23, web_close_date_sk AS web_close_date_sk_node_23, web_class AS web_class_node_23, web_manager AS web_manager_node_23, web_mkt_id AS web_mkt_id_node_23, web_mkt_class AS web_mkt_class_node_23, web_mkt_desc AS web_mkt_desc_node_23, web_market_manager AS web_market_manager_node_23, web_company_id AS web_company_id_node_23, web_company_name AS web_company_name_node_23, web_street_number AS web_street_number_node_23, web_street_name AS web_street_name_node_23, web_street_type AS web_street_type_node_23, web_suite_number AS web_suite_number_node_23, web_city AS web_city_node_23, web_county AS web_county_node_23, web_state AS web_state_node_23, web_zip AS web_zip_node_23, web_country AS web_country_node_23, web_gmt_offset AS web_gmt_offset_node_23, web_tax_percentage AS web_tax_percentage_node_23])
:                    :     +- Sort(orderBy=[web_country ASC])
:                    :        +- Exchange(distribution=[single])
:                    :           +- HashAggregate(isMerge=[false], groupBy=[web_site_sk, web_site_id, web_rec_start_date, web_rec_end_date, web_name, web_open_date_sk, web_close_date_sk, web_class, web_manager, web_mkt_id, web_mkt_class, web_mkt_desc, web_market_manager, web_company_id, web_company_name, web_street_number, web_street_name, web_street_type, web_suite_number, web_city, web_county, web_state, web_zip, web_country, web_gmt_offset, web_tax_percentage], select=[web_site_sk, web_site_id, web_rec_start_date, web_rec_end_date, web_name, web_open_date_sk, web_close_date_sk, web_class, web_manager, web_mkt_id, web_mkt_class, web_mkt_desc, web_market_manager, web_company_id, web_company_name, web_street_number, web_street_name, web_street_type, web_suite_number, web_city, web_county, web_state, web_zip, web_country, web_gmt_offset, web_tax_percentage])
:                    :              +- Exchange(distribution=[hash[web_site_sk, web_site_id, web_rec_start_date, web_rec_end_date, web_name, web_open_date_sk, web_close_date_sk, web_class, web_manager, web_mkt_id, web_mkt_class, web_mkt_desc, web_market_manager, web_company_id, web_company_name, web_street_number, web_street_name, web_street_type, web_suite_number, web_city, web_county, web_state, web_zip, web_country, web_gmt_offset, web_tax_percentage]])
:                    :                 +- TableSourceScan(table=[[default_catalog, default_database, web_site]], fields=[web_site_sk, web_site_id, web_rec_start_date, web_rec_end_date, web_name, web_open_date_sk, web_close_date_sk, web_class, web_manager, web_mkt_id, web_mkt_class, web_mkt_desc, web_market_manager, web_company_id, web_company_name, web_street_number, web_street_name, web_street_type, web_suite_number, web_city, web_county, web_state, web_zip, web_country, web_gmt_offset, web_tax_percentage])
:                    :- Exchange(distribution=[hash[ss_ext_list_price_node_200]])
:                    :  +- Calc(select=[EXPR$0 AS ss_ext_list_price_node_20, CAST(EXPR$0 AS DECIMAL(21, 2)) AS ss_ext_list_price_node_200])
:                    :     +- PythonGroupAggregate(groupBy=[ss_addr_sk], select=[ss_addr_sk, preloaded_udf_agg(ss_ext_list_price) AS EXPR$0])
:                    :        +- Exchange(distribution=[keep_input_as_is[hash[ss_addr_sk]]])
:                    :           +- Sort(orderBy=[ss_addr_sk ASC])
:                    :              +- Exchange(distribution=[hash[ss_addr_sk]])
:                    :                 +- TableSourceScan(table=[[default_catalog, default_database, store_sales, project=[ss_addr_sk, ss_ext_list_price], metadata=[]]], fields=[ss_addr_sk, ss_ext_list_price])
:                    +- Exchange(distribution=[hash[cs_ext_wholesale_cost_node_210]])
:                       +- Calc(select=[cs_sold_date_sk AS cs_sold_date_sk_node_21, cs_sold_time_sk AS cs_sold_time_sk_node_21, cs_ship_date_sk AS cs_ship_date_sk_node_21, cs_bill_customer_sk AS cs_bill_customer_sk_node_21, cs_bill_cdemo_sk AS cs_bill_cdemo_sk_node_21, cs_bill_hdemo_sk AS cs_bill_hdemo_sk_node_21, cs_bill_addr_sk AS cs_bill_addr_sk_node_21, cs_ship_customer_sk AS cs_ship_customer_sk_node_21, cs_ship_cdemo_sk AS cs_ship_cdemo_sk_node_21, cs_ship_hdemo_sk AS cs_ship_hdemo_sk_node_21, cs_ship_addr_sk AS cs_ship_addr_sk_node_21, cs_call_center_sk AS cs_call_center_sk_node_21, cs_catalog_page_sk AS cs_catalog_page_sk_node_21, cs_ship_mode_sk AS cs_ship_mode_sk_node_21, cs_warehouse_sk AS cs_warehouse_sk_node_21, cs_item_sk AS cs_item_sk_node_21, cs_promo_sk AS cs_promo_sk_node_21, cs_order_number AS cs_order_number_node_21, cs_quantity AS cs_quantity_node_21, cs_wholesale_cost AS cs_wholesale_cost_node_21, cs_list_price AS cs_list_price_node_21, cs_sales_price AS cs_sales_price_node_21, cs_ext_discount_amt AS cs_ext_discount_amt_node_21, cs_ext_sales_price AS cs_ext_sales_price_node_21, cs_ext_wholesale_cost AS cs_ext_wholesale_cost_node_21, cs_ext_list_price AS cs_ext_list_price_node_21, cs_ext_tax AS cs_ext_tax_node_21, cs_coupon_amt AS cs_coupon_amt_node_21, cs_ext_ship_cost AS cs_ext_ship_cost_node_21, cs_net_paid AS cs_net_paid_node_21, cs_net_paid_inc_tax AS cs_net_paid_inc_tax_node_21, cs_net_paid_inc_ship AS cs_net_paid_inc_ship_node_21, cs_net_paid_inc_ship_tax AS cs_net_paid_inc_ship_tax_node_21, cs_net_profit AS cs_net_profit_node_21, cr_returned_date_sk AS cr_returned_date_sk_node_22, cr_returned_time_sk AS cr_returned_time_sk_node_22, cr_item_sk AS cr_item_sk_node_22, cr_refunded_customer_sk AS cr_refunded_customer_sk_node_22, cr_refunded_cdemo_sk AS cr_refunded_cdemo_sk_node_22, cr_refunded_hdemo_sk AS cr_refunded_hdemo_sk_node_22, cr_refunded_addr_sk AS cr_refunded_addr_sk_node_22, cr_returning_customer_sk AS cr_returning_customer_sk_node_22, cr_returning_cdemo_sk AS cr_returning_cdemo_sk_node_22, cr_returning_hdemo_sk AS cr_returning_hdemo_sk_node_22, cr_returning_addr_sk AS cr_returning_addr_sk_node_22, cr_call_center_sk AS cr_call_center_sk_node_22, cr_catalog_page_sk AS cr_catalog_page_sk_node_22, cr_ship_mode_sk AS cr_ship_mode_sk_node_22, cr_warehouse_sk AS cr_warehouse_sk_node_22, cr_reason_sk AS cr_reason_sk_node_22, cr_order_number AS cr_order_number_node_22, cr_return_quantity AS cr_return_quantity_node_22, cr_return_amount AS cr_return_amount_node_22, cr_return_tax AS cr_return_tax_node_22, cr_return_amt_inc_tax AS cr_return_amt_inc_tax_node_22, cr_fee AS cr_fee_node_22, cr_return_ship_cost AS cr_return_ship_cost_node_22, cr_refunded_cash AS cr_refunded_cash_node_22, cr_reversed_charge AS cr_reversed_charge_node_22, cr_store_credit AS cr_store_credit_node_22, cr_net_loss AS cr_net_loss_node_22, CAST(cs_ext_wholesale_cost AS DECIMAL(21, 2)) AS cs_ext_wholesale_cost_node_210])
:                          +- Sort(orderBy=[cr_call_center_sk ASC])
:                             +- Exchange(distribution=[single])
:                                +- AdaptiveJoin(originalJoin=[ShuffleHashJoin], joinType=[InnerJoin], where=[(cr_returning_hdemo_sk = cs_ship_mode_sk)], select=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit, cr_returned_date_sk, cr_returned_time_sk, cr_item_sk, cr_refunded_customer_sk, cr_refunded_cdemo_sk, cr_refunded_hdemo_sk, cr_refunded_addr_sk, cr_returning_customer_sk, cr_returning_cdemo_sk, cr_returning_hdemo_sk, cr_returning_addr_sk, cr_call_center_sk, cr_catalog_page_sk, cr_ship_mode_sk, cr_warehouse_sk, cr_reason_sk, cr_order_number, cr_return_quantity, cr_return_amount, cr_return_tax, cr_return_amt_inc_tax, cr_fee, cr_return_ship_cost, cr_refunded_cash, cr_reversed_charge, cr_store_credit, cr_net_loss], build=[right])
:                                   :- Exchange(distribution=[hash[cs_ship_mode_sk]])
:                                   :  +- TableSourceScan(table=[[default_catalog, default_database, catalog_sales]], fields=[cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity, cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit])
:                                   +- Exchange(distribution=[hash[cr_returning_hdemo_sk]])
:                                      +- TableSourceScan(table=[[default_catalog, default_database, catalog_returns]], fields=[cr_returned_date_sk, cr_returned_time_sk, cr_item_sk, cr_refunded_customer_sk, cr_refunded_cdemo_sk, cr_refunded_hdemo_sk, cr_refunded_addr_sk, cr_returning_customer_sk, cr_returning_cdemo_sk, cr_returning_hdemo_sk, cr_returning_addr_sk, cr_call_center_sk, cr_catalog_page_sk, cr_ship_mode_sk, cr_warehouse_sk, cr_reason_sk, cr_order_number, cr_return_quantity, cr_return_amount, cr_return_tax, cr_return_amt_inc_tax, cr_fee, cr_return_ship_cost, cr_refunded_cash, cr_reversed_charge, cr_store_credit, cr_net_loss])
+- Exchange(distribution=[hash[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count]])
   +- MultipleInput(readOrder=[0,0,1], members=[\
HashJoin(joinType=[InnerJoin], where=[(hd_vehicle_count = r_reason_sk)], select=[r_reason_sk, r_reason_id, r_reason_desc, wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count], isBroadcast=[true], build=[left])\
:- [#1] Exchange(distribution=[broadcast])\
+- HashJoin(joinType=[InnerJoin], where=[(wr_returned_date_sk = hd_dep_count)], select=[wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss, hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count], isBroadcast=[true], build=[right])\
   :- Calc(select=[wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss], where=[((wr_return_quantity < 14) AND (wr_refunded_customer_sk <= 1))])\
   :  +- [#3] TableSourceScan(table=[[default_catalog, default_database, web_returns, filter=[and(<(wr_return_quantity, 14), <=(wr_refunded_customer_sk, 1))]]], fields=[wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss])\
   +- [#2] Exchange(distribution=[broadcast])\
])
      :- Exchange(distribution=[broadcast])
      :  +- Limit(offset=[0], fetch=[11], global=[true])
      :     +- Exchange(distribution=[single])
      :        +- Limit(offset=[0], fetch=[11], global=[false])
      :           +- TableSourceScan(table=[[default_catalog, default_database, reason, limit=[11]]], fields=[r_reason_sk, r_reason_id, r_reason_desc])
      :- Exchange(distribution=[broadcast])
      :  +- TableSourceScan(table=[[default_catalog, default_database, household_demographics]], fields=[hd_demo_sk, hd_income_band_sk, hd_buy_potential, hd_dep_count, hd_vehicle_count])
      +- TableSourceScan(table=[[default_catalog, default_database, web_returns, filter=[and(<(wr_return_quantity, 14), <=(wr_refunded_customer_sk, 1))]]], fields=[wr_returned_date_sk, wr_returned_time_sk, wr_item_sk, wr_refunded_customer_sk, wr_refunded_cdemo_sk, wr_refunded_hdemo_sk, wr_refunded_addr_sk, wr_returning_customer_sk, wr_returning_cdemo_sk, wr_returning_hdemo_sk, wr_returning_addr_sk, wr_web_page_sk, wr_reason_sk, wr_order_number, wr_return_quantity, wr_return_amt, wr_return_tax, wr_return_amt_inc_tax, wr_fee, wr_return_ship_cost, wr_refunded_cash, wr_reversed_charge, wr_account_credit, wr_net_loss])

",
      "stderr": ""
    },
    "unopt": {
      "success": false,
      "error_name": "RuntimeException",
      "error_message": "An error occurred while calling o328035292.explain.
: java.lang.RuntimeException: Error while applying rule FlinkExpandConversionRule, args [rel#661774693:AbstractConverter.BATCH_PHYSICAL.hash[0, 1, 2]true.[45](input=RelSubset#661774691,convention=BATCH_PHYSICAL,FlinkRelDistributionTraitDef=hash[0, 1, 2]true,sort=[45]), rel#661774690:BatchPhysicalLocalHashAggregate.BATCH_PHYSICAL.any.[45](input=RelSubset#661774689,groupBy=cs_ship_hdemo_sk_node_21, cr_returning_customer_sk_node_22, cs_ext_wholesale_cost_node_210,select=cs_ship_hdemo_sk_node_21, cr_returning_customer_sk_node_22, cs_ext_wholesale_cost_node_210)]
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.onMatch(VolcanoRuleCall.java:250)
\tat org.apache.calcite.plan.volcano.IterativeRuleDriver.drive(IterativeRuleDriver.java:59)
\tat org.apache.calcite.plan.volcano.VolcanoPlanner.findBestExp(VolcanoPlanner.java:523)
\tat org.apache.calcite.tools.Programs$RuleSetProgram.run(Programs.java:317)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkVolcanoProgram.optimize(FlinkVolcanoProgram.scala:62)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkChainedProgram.$anonfun$optimize$1(FlinkChainedProgram.scala:59)
\tat scala.collection.TraversableOnce$folder$1.apply(TraversableOnce.scala:196)
\tat scala.collection.TraversableOnce$folder$1.apply(TraversableOnce.scala:194)
\tat scala.collection.Iterator.foreach(Iterator.scala:943)
\tat scala.collection.Iterator.foreach$(Iterator.scala:943)
\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
\tat scala.collection.IterableLike.foreach(IterableLike.scala:74)
\tat scala.collection.IterableLike.foreach$(IterableLike.scala:73)
\tat scala.collection.AbstractIterable.foreach(Iterable.scala:56)
\tat scala.collection.TraversableOnce.foldLeft(TraversableOnce.scala:199)
\tat scala.collection.TraversableOnce.foldLeft$(TraversableOnce.scala:192)
\tat scala.collection.AbstractTraversable.foldLeft(Traversable.scala:108)
\tat org.apache.flink.table.planner.plan.optimize.program.FlinkChainedProgram.optimize(FlinkChainedProgram.scala:55)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.optimizeTree(BatchCommonSubGraphBasedOptimizer.scala:93)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.optimizeBlock(BatchCommonSubGraphBasedOptimizer.scala:58)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.$anonfun$doOptimize$1(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.$anonfun$doOptimize$1$adapted(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat scala.collection.immutable.List.foreach(List.scala:431)
\tat org.apache.flink.table.planner.plan.optimize.BatchCommonSubGraphBasedOptimizer.doOptimize(BatchCommonSubGraphBasedOptimizer.scala:45)
\tat org.apache.flink.table.planner.plan.optimize.CommonSubGraphBasedOptimizer.optimize(CommonSubGraphBasedOptimizer.scala:87)
\tat org.apache.flink.table.planner.delegation.PlannerBase.optimize(PlannerBase.scala:390)
\tat org.apache.flink.table.planner.delegation.PlannerBase.getExplainGraphs(PlannerBase.scala:625)
\tat org.apache.flink.table.planner.delegation.BatchPlanner.explain(BatchPlanner.scala:149)
\tat org.apache.flink.table.planner.delegation.BatchPlanner.explain(BatchPlanner.scala:49)
\tat org.apache.flink.table.api.internal.TableEnvironmentImpl.explainInternal(TableEnvironmentImpl.java:753)
\tat org.apache.flink.table.api.internal.TableImpl.explain(TableImpl.java:482)
\tat jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)
\tat org.apache.flink.api.python.shaded.py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
\tat org.apache.flink.api.python.shaded.py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
\tat org.apache.flink.api.python.shaded.py4j.Gateway.invoke(Gateway.java:282)
\tat org.apache.flink.api.python.shaded.py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
\tat org.apache.flink.api.python.shaded.py4j.commands.CallCommand.execute(CallCommand.java:79)
\tat org.apache.flink.api.python.shaded.py4j.GatewayConnection.run(GatewayConnection.java:238)
\tat java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.RuntimeException: Error occurred while applying rule FlinkExpandConversionRule
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.transformTo(VolcanoRuleCall.java:157)
\tat org.apache.calcite.plan.RelOptRuleCall.transformTo(RelOptRuleCall.java:273)
\tat org.apache.calcite.plan.RelOptRuleCall.transformTo(RelOptRuleCall.java:288)
\tat org.apache.flink.table.planner.plan.rules.physical.FlinkExpandConversionRule.satisfyTraitsBySelf(FlinkExpandConversionRule.scala:72)
\tat org.apache.flink.table.planner.plan.rules.physical.FlinkExpandConversionRule.onMatch(FlinkExpandConversionRule.scala:52)
\tat org.apache.calcite.plan.volcano.VolcanoRuleCall.onMatch(VolcanoRuleCall.java:223)
\t... 40 more
Caused by: java.lang.ArrayIndexOutOfBoundsException
",
      "stdout": "",
      "stderr": ""
    }
  }
}
"""



//Optimizer Branch Coverage: 0